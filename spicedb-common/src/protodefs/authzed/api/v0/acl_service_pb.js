// source: authzed/api/v0/acl_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var validate_validate_pb = require('../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var authzed_api_v0_core_pb = require('../../../authzed/api/v0/core_pb.js');
goog.object.extend(proto, authzed_api_v0_core_pb);
goog.exportSymbol('proto.authzed.api.v0.CheckRequest', null, global);
goog.exportSymbol('proto.authzed.api.v0.CheckResponse', null, global);
goog.exportSymbol('proto.authzed.api.v0.CheckResponse.Membership', null, global);
goog.exportSymbol('proto.authzed.api.v0.ContentChangeCheckRequest', null, global);
goog.exportSymbol('proto.authzed.api.v0.ExpandRequest', null, global);
goog.exportSymbol('proto.authzed.api.v0.ExpandResponse', null, global);
goog.exportSymbol('proto.authzed.api.v0.LookupRequest', null, global);
goog.exportSymbol('proto.authzed.api.v0.LookupResponse', null, global);
goog.exportSymbol('proto.authzed.api.v0.ReadRequest', null, global);
goog.exportSymbol('proto.authzed.api.v0.ReadResponse', null, global);
goog.exportSymbol('proto.authzed.api.v0.ReadResponse.Tupleset', null, global);
goog.exportSymbol('proto.authzed.api.v0.RelationTupleFilter', null, global);
goog.exportSymbol('proto.authzed.api.v0.RelationTupleFilter.Filter', null, global);
goog.exportSymbol('proto.authzed.api.v0.WriteRequest', null, global);
goog.exportSymbol('proto.authzed.api.v0.WriteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.RelationTupleFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v0.RelationTupleFilter.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v0.RelationTupleFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.RelationTupleFilter.displayName = 'proto.authzed.api.v0.RelationTupleFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.ReadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v0.ReadRequest.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v0.ReadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.ReadRequest.displayName = 'proto.authzed.api.v0.ReadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.ReadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v0.ReadResponse.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v0.ReadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.ReadResponse.displayName = 'proto.authzed.api.v0.ReadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.ReadResponse.Tupleset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v0.ReadResponse.Tupleset.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v0.ReadResponse.Tupleset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.ReadResponse.Tupleset.displayName = 'proto.authzed.api.v0.ReadResponse.Tupleset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.WriteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v0.WriteRequest.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v0.WriteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.WriteRequest.displayName = 'proto.authzed.api.v0.WriteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.WriteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.WriteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.WriteResponse.displayName = 'proto.authzed.api.v0.WriteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.CheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.CheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.CheckRequest.displayName = 'proto.authzed.api.v0.CheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.ContentChangeCheckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.ContentChangeCheckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.ContentChangeCheckRequest.displayName = 'proto.authzed.api.v0.ContentChangeCheckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.CheckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.CheckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.CheckResponse.displayName = 'proto.authzed.api.v0.CheckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.ExpandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.ExpandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.ExpandRequest.displayName = 'proto.authzed.api.v0.ExpandRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.ExpandResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.ExpandResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.ExpandResponse.displayName = 'proto.authzed.api.v0.ExpandResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.LookupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v0.LookupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.LookupRequest.displayName = 'proto.authzed.api.v0.LookupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v0.LookupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v0.LookupResponse.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v0.LookupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v0.LookupResponse.displayName = 'proto.authzed.api.v0.LookupResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v0.RelationTupleFilter.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.RelationTupleFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.RelationTupleFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.RelationTupleFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    relation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userset: (f = msg.getUserset()) && authzed_api_v0_core_pb.ObjectAndRelation.toObject(includeInstance, f),
    filtersList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.RelationTupleFilter}
 */
proto.authzed.api.v0.RelationTupleFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.RelationTupleFilter;
  return proto.authzed.api.v0.RelationTupleFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.RelationTupleFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.RelationTupleFilter}
 */
proto.authzed.api.v0.RelationTupleFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelation(value);
      break;
    case 5:
      var value = new authzed_api_v0_core_pb.ObjectAndRelation;
      reader.readMessage(value,authzed_api_v0_core_pb.ObjectAndRelation.deserializeBinaryFromReader);
      msg.setUserset(value);
      break;
    case 6:
      var values = /** @type {!Array<!proto.authzed.api.v0.RelationTupleFilter.Filter>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilters(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.RelationTupleFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.RelationTupleFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.RelationTupleFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserset();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      authzed_api_v0_core_pb.ObjectAndRelation.serializeBinaryToWriter
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.authzed.api.v0.RelationTupleFilter.Filter = {
  UNKNOWN: 0,
  OBJECT_ID: 1,
  RELATION: 2,
  USERSET: 4
};

/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object_id = 2;
 * @return {string}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.getObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.setObjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string relation = 3;
 * @return {string}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ObjectAndRelation userset = 5;
 * @return {?proto.authzed.api.v0.ObjectAndRelation}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.getUserset = function() {
  return /** @type{?proto.authzed.api.v0.ObjectAndRelation} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.ObjectAndRelation, 5));
};


/**
 * @param {?proto.authzed.api.v0.ObjectAndRelation|undefined} value
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
*/
proto.authzed.api.v0.RelationTupleFilter.prototype.setUserset = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.clearUserset = function() {
  return this.setUserset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.hasUserset = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Filter filters = 6;
 * @return {!Array<!proto.authzed.api.v0.RelationTupleFilter.Filter>}
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.getFiltersList = function() {
  return /** @type {!Array<!proto.authzed.api.v0.RelationTupleFilter.Filter>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.authzed.api.v0.RelationTupleFilter.Filter>} value
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.setFiltersList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.authzed.api.v0.RelationTupleFilter.Filter} value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.addFilters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.RelationTupleFilter} returns this
 */
proto.authzed.api.v0.RelationTupleFilter.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v0.ReadRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.ReadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.ReadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.ReadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ReadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tuplesetsList: jspb.Message.toObjectList(msg.getTuplesetsList(),
    proto.authzed.api.v0.RelationTupleFilter.toObject, includeInstance),
    atRevision: (f = msg.getAtRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.ReadRequest}
 */
proto.authzed.api.v0.ReadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.ReadRequest;
  return proto.authzed.api.v0.ReadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.ReadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.ReadRequest}
 */
proto.authzed.api.v0.ReadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v0.RelationTupleFilter;
      reader.readMessage(value,proto.authzed.api.v0.RelationTupleFilter.deserializeBinaryFromReader);
      msg.addTuplesets(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setAtRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.ReadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.ReadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.ReadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ReadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTuplesetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.authzed.api.v0.RelationTupleFilter.serializeBinaryToWriter
    );
  }
  f = message.getAtRevision();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelationTupleFilter tuplesets = 1;
 * @return {!Array<!proto.authzed.api.v0.RelationTupleFilter>}
 */
proto.authzed.api.v0.ReadRequest.prototype.getTuplesetsList = function() {
  return /** @type{!Array<!proto.authzed.api.v0.RelationTupleFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authzed.api.v0.RelationTupleFilter, 1));
};


/**
 * @param {!Array<!proto.authzed.api.v0.RelationTupleFilter>} value
 * @return {!proto.authzed.api.v0.ReadRequest} returns this
*/
proto.authzed.api.v0.ReadRequest.prototype.setTuplesetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.authzed.api.v0.RelationTupleFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.RelationTupleFilter}
 */
proto.authzed.api.v0.ReadRequest.prototype.addTuplesets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.authzed.api.v0.RelationTupleFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.ReadRequest} returns this
 */
proto.authzed.api.v0.ReadRequest.prototype.clearTuplesetsList = function() {
  return this.setTuplesetsList([]);
};


/**
 * optional Zookie at_revision = 2;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.ReadRequest.prototype.getAtRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 2));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.ReadRequest} returns this
*/
proto.authzed.api.v0.ReadRequest.prototype.setAtRevision = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ReadRequest} returns this
 */
proto.authzed.api.v0.ReadRequest.prototype.clearAtRevision = function() {
  return this.setAtRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ReadRequest.prototype.hasAtRevision = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v0.ReadResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.ReadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.ReadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.ReadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ReadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tuplesetsList: jspb.Message.toObjectList(msg.getTuplesetsList(),
    proto.authzed.api.v0.ReadResponse.Tupleset.toObject, includeInstance),
    revision: (f = msg.getRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.ReadResponse}
 */
proto.authzed.api.v0.ReadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.ReadResponse;
  return proto.authzed.api.v0.ReadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.ReadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.ReadResponse}
 */
proto.authzed.api.v0.ReadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v0.ReadResponse.Tupleset;
      reader.readMessage(value,proto.authzed.api.v0.ReadResponse.Tupleset.deserializeBinaryFromReader);
      msg.addTuplesets(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.ReadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.ReadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.ReadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ReadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTuplesetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.authzed.api.v0.ReadResponse.Tupleset.serializeBinaryToWriter
    );
  }
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v0.ReadResponse.Tupleset.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.ReadResponse.Tupleset.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.ReadResponse.Tupleset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.ReadResponse.Tupleset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ReadResponse.Tupleset.toObject = function(includeInstance, msg) {
  var f, obj = {
    tuplesList: jspb.Message.toObjectList(msg.getTuplesList(),
    authzed_api_v0_core_pb.RelationTuple.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.ReadResponse.Tupleset}
 */
proto.authzed.api.v0.ReadResponse.Tupleset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.ReadResponse.Tupleset;
  return proto.authzed.api.v0.ReadResponse.Tupleset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.ReadResponse.Tupleset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.ReadResponse.Tupleset}
 */
proto.authzed.api.v0.ReadResponse.Tupleset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.RelationTuple;
      reader.readMessage(value,authzed_api_v0_core_pb.RelationTuple.deserializeBinaryFromReader);
      msg.addTuples(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.ReadResponse.Tupleset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.ReadResponse.Tupleset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.ReadResponse.Tupleset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ReadResponse.Tupleset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTuplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      authzed_api_v0_core_pb.RelationTuple.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelationTuple tuples = 1;
 * @return {!Array<!proto.authzed.api.v0.RelationTuple>}
 */
proto.authzed.api.v0.ReadResponse.Tupleset.prototype.getTuplesList = function() {
  return /** @type{!Array<!proto.authzed.api.v0.RelationTuple>} */ (
    jspb.Message.getRepeatedWrapperField(this, authzed_api_v0_core_pb.RelationTuple, 1));
};


/**
 * @param {!Array<!proto.authzed.api.v0.RelationTuple>} value
 * @return {!proto.authzed.api.v0.ReadResponse.Tupleset} returns this
*/
proto.authzed.api.v0.ReadResponse.Tupleset.prototype.setTuplesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.authzed.api.v0.RelationTuple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.RelationTuple}
 */
proto.authzed.api.v0.ReadResponse.Tupleset.prototype.addTuples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.authzed.api.v0.RelationTuple, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.ReadResponse.Tupleset} returns this
 */
proto.authzed.api.v0.ReadResponse.Tupleset.prototype.clearTuplesList = function() {
  return this.setTuplesList([]);
};


/**
 * repeated Tupleset tuplesets = 1;
 * @return {!Array<!proto.authzed.api.v0.ReadResponse.Tupleset>}
 */
proto.authzed.api.v0.ReadResponse.prototype.getTuplesetsList = function() {
  return /** @type{!Array<!proto.authzed.api.v0.ReadResponse.Tupleset>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authzed.api.v0.ReadResponse.Tupleset, 1));
};


/**
 * @param {!Array<!proto.authzed.api.v0.ReadResponse.Tupleset>} value
 * @return {!proto.authzed.api.v0.ReadResponse} returns this
*/
proto.authzed.api.v0.ReadResponse.prototype.setTuplesetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.authzed.api.v0.ReadResponse.Tupleset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.ReadResponse.Tupleset}
 */
proto.authzed.api.v0.ReadResponse.prototype.addTuplesets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.authzed.api.v0.ReadResponse.Tupleset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.ReadResponse} returns this
 */
proto.authzed.api.v0.ReadResponse.prototype.clearTuplesetsList = function() {
  return this.setTuplesetsList([]);
};


/**
 * optional Zookie revision = 2;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.ReadResponse.prototype.getRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 2));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.ReadResponse} returns this
*/
proto.authzed.api.v0.ReadResponse.prototype.setRevision = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ReadResponse} returns this
 */
proto.authzed.api.v0.ReadResponse.prototype.clearRevision = function() {
  return this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ReadResponse.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v0.WriteRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.WriteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.WriteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.WriteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.WriteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeConditionsList: jspb.Message.toObjectList(msg.getWriteConditionsList(),
    authzed_api_v0_core_pb.RelationTuple.toObject, includeInstance),
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    authzed_api_v0_core_pb.RelationTupleUpdate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.WriteRequest}
 */
proto.authzed.api.v0.WriteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.WriteRequest;
  return proto.authzed.api.v0.WriteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.WriteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.WriteRequest}
 */
proto.authzed.api.v0.WriteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.RelationTuple;
      reader.readMessage(value,authzed_api_v0_core_pb.RelationTuple.deserializeBinaryFromReader);
      msg.addWriteConditions(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.RelationTupleUpdate;
      reader.readMessage(value,authzed_api_v0_core_pb.RelationTupleUpdate.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.WriteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.WriteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.WriteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.WriteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      authzed_api_v0_core_pb.RelationTuple.serializeBinaryToWriter
    );
  }
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      authzed_api_v0_core_pb.RelationTupleUpdate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelationTuple write_conditions = 1;
 * @return {!Array<!proto.authzed.api.v0.RelationTuple>}
 */
proto.authzed.api.v0.WriteRequest.prototype.getWriteConditionsList = function() {
  return /** @type{!Array<!proto.authzed.api.v0.RelationTuple>} */ (
    jspb.Message.getRepeatedWrapperField(this, authzed_api_v0_core_pb.RelationTuple, 1));
};


/**
 * @param {!Array<!proto.authzed.api.v0.RelationTuple>} value
 * @return {!proto.authzed.api.v0.WriteRequest} returns this
*/
proto.authzed.api.v0.WriteRequest.prototype.setWriteConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.authzed.api.v0.RelationTuple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.RelationTuple}
 */
proto.authzed.api.v0.WriteRequest.prototype.addWriteConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.authzed.api.v0.RelationTuple, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.WriteRequest} returns this
 */
proto.authzed.api.v0.WriteRequest.prototype.clearWriteConditionsList = function() {
  return this.setWriteConditionsList([]);
};


/**
 * repeated RelationTupleUpdate updates = 2;
 * @return {!Array<!proto.authzed.api.v0.RelationTupleUpdate>}
 */
proto.authzed.api.v0.WriteRequest.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.authzed.api.v0.RelationTupleUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, authzed_api_v0_core_pb.RelationTupleUpdate, 2));
};


/**
 * @param {!Array<!proto.authzed.api.v0.RelationTupleUpdate>} value
 * @return {!proto.authzed.api.v0.WriteRequest} returns this
*/
proto.authzed.api.v0.WriteRequest.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.authzed.api.v0.RelationTupleUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.RelationTupleUpdate}
 */
proto.authzed.api.v0.WriteRequest.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.authzed.api.v0.RelationTupleUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.WriteRequest} returns this
 */
proto.authzed.api.v0.WriteRequest.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.WriteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.WriteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.WriteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.WriteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    revision: (f = msg.getRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.WriteResponse}
 */
proto.authzed.api.v0.WriteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.WriteResponse;
  return proto.authzed.api.v0.WriteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.WriteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.WriteResponse}
 */
proto.authzed.api.v0.WriteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.WriteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.WriteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.WriteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.WriteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};


/**
 * optional Zookie revision = 1;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.WriteResponse.prototype.getRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 1));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.WriteResponse} returns this
*/
proto.authzed.api.v0.WriteResponse.prototype.setRevision = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.WriteResponse} returns this
 */
proto.authzed.api.v0.WriteResponse.prototype.clearRevision = function() {
  return this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.WriteResponse.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.CheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.CheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.CheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.CheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    testUserset: (f = msg.getTestUserset()) && authzed_api_v0_core_pb.ObjectAndRelation.toObject(includeInstance, f),
    user: (f = msg.getUser()) && authzed_api_v0_core_pb.User.toObject(includeInstance, f),
    atRevision: (f = msg.getAtRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.CheckRequest}
 */
proto.authzed.api.v0.CheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.CheckRequest;
  return proto.authzed.api.v0.CheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.CheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.CheckRequest}
 */
proto.authzed.api.v0.CheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.ObjectAndRelation;
      reader.readMessage(value,authzed_api_v0_core_pb.ObjectAndRelation.deserializeBinaryFromReader);
      msg.setTestUserset(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.User;
      reader.readMessage(value,authzed_api_v0_core_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setAtRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.CheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.CheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.CheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.CheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTestUserset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v0_core_pb.ObjectAndRelation.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getAtRevision();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectAndRelation test_userset = 1;
 * @return {?proto.authzed.api.v0.ObjectAndRelation}
 */
proto.authzed.api.v0.CheckRequest.prototype.getTestUserset = function() {
  return /** @type{?proto.authzed.api.v0.ObjectAndRelation} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.ObjectAndRelation, 1));
};


/**
 * @param {?proto.authzed.api.v0.ObjectAndRelation|undefined} value
 * @return {!proto.authzed.api.v0.CheckRequest} returns this
*/
proto.authzed.api.v0.CheckRequest.prototype.setTestUserset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.CheckRequest} returns this
 */
proto.authzed.api.v0.CheckRequest.prototype.clearTestUserset = function() {
  return this.setTestUserset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.CheckRequest.prototype.hasTestUserset = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User user = 2;
 * @return {?proto.authzed.api.v0.User}
 */
proto.authzed.api.v0.CheckRequest.prototype.getUser = function() {
  return /** @type{?proto.authzed.api.v0.User} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.User, 2));
};


/**
 * @param {?proto.authzed.api.v0.User|undefined} value
 * @return {!proto.authzed.api.v0.CheckRequest} returns this
*/
proto.authzed.api.v0.CheckRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.CheckRequest} returns this
 */
proto.authzed.api.v0.CheckRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.CheckRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Zookie at_revision = 3;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.CheckRequest.prototype.getAtRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 3));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.CheckRequest} returns this
*/
proto.authzed.api.v0.CheckRequest.prototype.setAtRevision = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.CheckRequest} returns this
 */
proto.authzed.api.v0.CheckRequest.prototype.clearAtRevision = function() {
  return this.setAtRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.CheckRequest.prototype.hasAtRevision = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.ContentChangeCheckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.ContentChangeCheckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ContentChangeCheckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    testUserset: (f = msg.getTestUserset()) && authzed_api_v0_core_pb.ObjectAndRelation.toObject(includeInstance, f),
    user: (f = msg.getUser()) && authzed_api_v0_core_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.ContentChangeCheckRequest}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.ContentChangeCheckRequest;
  return proto.authzed.api.v0.ContentChangeCheckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.ContentChangeCheckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.ContentChangeCheckRequest}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.ObjectAndRelation;
      reader.readMessage(value,authzed_api_v0_core_pb.ObjectAndRelation.deserializeBinaryFromReader);
      msg.setTestUserset(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.User;
      reader.readMessage(value,authzed_api_v0_core_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.ContentChangeCheckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.ContentChangeCheckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ContentChangeCheckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTestUserset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v0_core_pb.ObjectAndRelation.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectAndRelation test_userset = 1;
 * @return {?proto.authzed.api.v0.ObjectAndRelation}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.getTestUserset = function() {
  return /** @type{?proto.authzed.api.v0.ObjectAndRelation} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.ObjectAndRelation, 1));
};


/**
 * @param {?proto.authzed.api.v0.ObjectAndRelation|undefined} value
 * @return {!proto.authzed.api.v0.ContentChangeCheckRequest} returns this
*/
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.setTestUserset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ContentChangeCheckRequest} returns this
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.clearTestUserset = function() {
  return this.setTestUserset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.hasTestUserset = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User user = 2;
 * @return {?proto.authzed.api.v0.User}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.getUser = function() {
  return /** @type{?proto.authzed.api.v0.User} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.User, 2));
};


/**
 * @param {?proto.authzed.api.v0.User|undefined} value
 * @return {!proto.authzed.api.v0.ContentChangeCheckRequest} returns this
*/
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ContentChangeCheckRequest} returns this
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ContentChangeCheckRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.CheckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.CheckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.CheckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.CheckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isMember: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    revision: (f = msg.getRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f),
    membership: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.CheckResponse}
 */
proto.authzed.api.v0.CheckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.CheckResponse;
  return proto.authzed.api.v0.CheckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.CheckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.CheckResponse}
 */
proto.authzed.api.v0.CheckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMember(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    case 3:
      var value = /** @type {!proto.authzed.api.v0.CheckResponse.Membership} */ (reader.readEnum());
      msg.setMembership(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.CheckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.CheckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.CheckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.CheckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsMember();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
  f = message.getMembership();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.authzed.api.v0.CheckResponse.Membership = {
  UNKNOWN: 0,
  NOT_MEMBER: 1,
  MEMBER: 2
};

/**
 * optional bool is_member = 1;
 * @return {boolean}
 */
proto.authzed.api.v0.CheckResponse.prototype.getIsMember = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.authzed.api.v0.CheckResponse} returns this
 */
proto.authzed.api.v0.CheckResponse.prototype.setIsMember = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Zookie revision = 2;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.CheckResponse.prototype.getRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 2));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.CheckResponse} returns this
*/
proto.authzed.api.v0.CheckResponse.prototype.setRevision = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.CheckResponse} returns this
 */
proto.authzed.api.v0.CheckResponse.prototype.clearRevision = function() {
  return this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.CheckResponse.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Membership membership = 3;
 * @return {!proto.authzed.api.v0.CheckResponse.Membership}
 */
proto.authzed.api.v0.CheckResponse.prototype.getMembership = function() {
  return /** @type {!proto.authzed.api.v0.CheckResponse.Membership} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.authzed.api.v0.CheckResponse.Membership} value
 * @return {!proto.authzed.api.v0.CheckResponse} returns this
 */
proto.authzed.api.v0.CheckResponse.prototype.setMembership = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.ExpandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.ExpandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.ExpandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ExpandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userset: (f = msg.getUserset()) && authzed_api_v0_core_pb.ObjectAndRelation.toObject(includeInstance, f),
    atRevision: (f = msg.getAtRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.ExpandRequest}
 */
proto.authzed.api.v0.ExpandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.ExpandRequest;
  return proto.authzed.api.v0.ExpandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.ExpandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.ExpandRequest}
 */
proto.authzed.api.v0.ExpandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.ObjectAndRelation;
      reader.readMessage(value,authzed_api_v0_core_pb.ObjectAndRelation.deserializeBinaryFromReader);
      msg.setUserset(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setAtRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.ExpandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.ExpandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.ExpandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ExpandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v0_core_pb.ObjectAndRelation.serializeBinaryToWriter
    );
  }
  f = message.getAtRevision();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectAndRelation userset = 1;
 * @return {?proto.authzed.api.v0.ObjectAndRelation}
 */
proto.authzed.api.v0.ExpandRequest.prototype.getUserset = function() {
  return /** @type{?proto.authzed.api.v0.ObjectAndRelation} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.ObjectAndRelation, 1));
};


/**
 * @param {?proto.authzed.api.v0.ObjectAndRelation|undefined} value
 * @return {!proto.authzed.api.v0.ExpandRequest} returns this
*/
proto.authzed.api.v0.ExpandRequest.prototype.setUserset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ExpandRequest} returns this
 */
proto.authzed.api.v0.ExpandRequest.prototype.clearUserset = function() {
  return this.setUserset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ExpandRequest.prototype.hasUserset = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Zookie at_revision = 2;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.ExpandRequest.prototype.getAtRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 2));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.ExpandRequest} returns this
*/
proto.authzed.api.v0.ExpandRequest.prototype.setAtRevision = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ExpandRequest} returns this
 */
proto.authzed.api.v0.ExpandRequest.prototype.clearAtRevision = function() {
  return this.setAtRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ExpandRequest.prototype.hasAtRevision = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.ExpandResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.ExpandResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.ExpandResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ExpandResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeNode: (f = msg.getTreeNode()) && authzed_api_v0_core_pb.RelationTupleTreeNode.toObject(includeInstance, f),
    revision: (f = msg.getRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.ExpandResponse}
 */
proto.authzed.api.v0.ExpandResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.ExpandResponse;
  return proto.authzed.api.v0.ExpandResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.ExpandResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.ExpandResponse}
 */
proto.authzed.api.v0.ExpandResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.RelationTupleTreeNode;
      reader.readMessage(value,authzed_api_v0_core_pb.RelationTupleTreeNode.deserializeBinaryFromReader);
      msg.setTreeNode(value);
      break;
    case 3:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.ExpandResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.ExpandResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.ExpandResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.ExpandResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v0_core_pb.RelationTupleTreeNode.serializeBinaryToWriter
    );
  }
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};


/**
 * optional RelationTupleTreeNode tree_node = 1;
 * @return {?proto.authzed.api.v0.RelationTupleTreeNode}
 */
proto.authzed.api.v0.ExpandResponse.prototype.getTreeNode = function() {
  return /** @type{?proto.authzed.api.v0.RelationTupleTreeNode} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.RelationTupleTreeNode, 1));
};


/**
 * @param {?proto.authzed.api.v0.RelationTupleTreeNode|undefined} value
 * @return {!proto.authzed.api.v0.ExpandResponse} returns this
*/
proto.authzed.api.v0.ExpandResponse.prototype.setTreeNode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ExpandResponse} returns this
 */
proto.authzed.api.v0.ExpandResponse.prototype.clearTreeNode = function() {
  return this.setTreeNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ExpandResponse.prototype.hasTreeNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Zookie revision = 3;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.ExpandResponse.prototype.getRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 3));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.ExpandResponse} returns this
*/
proto.authzed.api.v0.ExpandResponse.prototype.setRevision = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.ExpandResponse} returns this
 */
proto.authzed.api.v0.ExpandResponse.prototype.clearRevision = function() {
  return this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.ExpandResponse.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.LookupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.LookupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.LookupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.LookupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectRelation: (f = msg.getObjectRelation()) && authzed_api_v0_core_pb.RelationReference.toObject(includeInstance, f),
    user: (f = msg.getUser()) && authzed_api_v0_core_pb.ObjectAndRelation.toObject(includeInstance, f),
    atRevision: (f = msg.getAtRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f),
    pageReference: jspb.Message.getFieldWithDefault(msg, 4, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.LookupRequest}
 */
proto.authzed.api.v0.LookupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.LookupRequest;
  return proto.authzed.api.v0.LookupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.LookupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.LookupRequest}
 */
proto.authzed.api.v0.LookupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v0_core_pb.RelationReference;
      reader.readMessage(value,authzed_api_v0_core_pb.RelationReference.deserializeBinaryFromReader);
      msg.setObjectRelation(value);
      break;
    case 2:
      var value = new authzed_api_v0_core_pb.ObjectAndRelation;
      reader.readMessage(value,authzed_api_v0_core_pb.ObjectAndRelation.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setAtRevision(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageReference(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.LookupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.LookupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.LookupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.LookupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectRelation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v0_core_pb.RelationReference.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v0_core_pb.ObjectAndRelation.serializeBinaryToWriter
    );
  }
  f = message.getAtRevision();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
  f = message.getPageReference();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional RelationReference object_relation = 1;
 * @return {?proto.authzed.api.v0.RelationReference}
 */
proto.authzed.api.v0.LookupRequest.prototype.getObjectRelation = function() {
  return /** @type{?proto.authzed.api.v0.RelationReference} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.RelationReference, 1));
};


/**
 * @param {?proto.authzed.api.v0.RelationReference|undefined} value
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
*/
proto.authzed.api.v0.LookupRequest.prototype.setObjectRelation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
 */
proto.authzed.api.v0.LookupRequest.prototype.clearObjectRelation = function() {
  return this.setObjectRelation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.LookupRequest.prototype.hasObjectRelation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ObjectAndRelation user = 2;
 * @return {?proto.authzed.api.v0.ObjectAndRelation}
 */
proto.authzed.api.v0.LookupRequest.prototype.getUser = function() {
  return /** @type{?proto.authzed.api.v0.ObjectAndRelation} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.ObjectAndRelation, 2));
};


/**
 * @param {?proto.authzed.api.v0.ObjectAndRelation|undefined} value
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
*/
proto.authzed.api.v0.LookupRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
 */
proto.authzed.api.v0.LookupRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.LookupRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Zookie at_revision = 3;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.LookupRequest.prototype.getAtRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 3));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
*/
proto.authzed.api.v0.LookupRequest.prototype.setAtRevision = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
 */
proto.authzed.api.v0.LookupRequest.prototype.clearAtRevision = function() {
  return this.setAtRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.LookupRequest.prototype.hasAtRevision = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string page_reference = 4;
 * @return {string}
 */
proto.authzed.api.v0.LookupRequest.prototype.getPageReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
 */
proto.authzed.api.v0.LookupRequest.prototype.setPageReference = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 limit = 5;
 * @return {number}
 */
proto.authzed.api.v0.LookupRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.authzed.api.v0.LookupRequest} returns this
 */
proto.authzed.api.v0.LookupRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v0.LookupResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v0.LookupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v0.LookupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v0.LookupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.LookupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resolvedObjectIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    nextPageReference: jspb.Message.getFieldWithDefault(msg, 2, ""),
    revision: (f = msg.getRevision()) && authzed_api_v0_core_pb.Zookie.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v0.LookupResponse}
 */
proto.authzed.api.v0.LookupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v0.LookupResponse;
  return proto.authzed.api.v0.LookupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v0.LookupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v0.LookupResponse}
 */
proto.authzed.api.v0.LookupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addResolvedObjectIds(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageReference(value);
      break;
    case 3:
      var value = new authzed_api_v0_core_pb.Zookie;
      reader.readMessage(value,authzed_api_v0_core_pb.Zookie.deserializeBinaryFromReader);
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v0.LookupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v0.LookupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v0.LookupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v0.LookupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResolvedObjectIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getNextPageReference();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRevision();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      authzed_api_v0_core_pb.Zookie.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string resolved_object_ids = 1;
 * @return {!Array<string>}
 */
proto.authzed.api.v0.LookupResponse.prototype.getResolvedObjectIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.authzed.api.v0.LookupResponse} returns this
 */
proto.authzed.api.v0.LookupResponse.prototype.setResolvedObjectIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v0.LookupResponse} returns this
 */
proto.authzed.api.v0.LookupResponse.prototype.addResolvedObjectIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v0.LookupResponse} returns this
 */
proto.authzed.api.v0.LookupResponse.prototype.clearResolvedObjectIdsList = function() {
  return this.setResolvedObjectIdsList([]);
};


/**
 * optional string next_page_reference = 2;
 * @return {string}
 */
proto.authzed.api.v0.LookupResponse.prototype.getNextPageReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v0.LookupResponse} returns this
 */
proto.authzed.api.v0.LookupResponse.prototype.setNextPageReference = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Zookie revision = 3;
 * @return {?proto.authzed.api.v0.Zookie}
 */
proto.authzed.api.v0.LookupResponse.prototype.getRevision = function() {
  return /** @type{?proto.authzed.api.v0.Zookie} */ (
    jspb.Message.getWrapperField(this, authzed_api_v0_core_pb.Zookie, 3));
};


/**
 * @param {?proto.authzed.api.v0.Zookie|undefined} value
 * @return {!proto.authzed.api.v0.LookupResponse} returns this
*/
proto.authzed.api.v0.LookupResponse.prototype.setRevision = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v0.LookupResponse} returns this
 */
proto.authzed.api.v0.LookupResponse.prototype.clearRevision = function() {
  return this.setRevision(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v0.LookupResponse.prototype.hasRevision = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.authzed.api.v0);

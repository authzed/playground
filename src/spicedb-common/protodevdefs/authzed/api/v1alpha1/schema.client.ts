// @generated by protobuf-ts 2.9.1 with parameter long_type_string,generate_dependencies
// @generated from protobuf file "authzed/api/v1alpha1/schema.proto" (package "authzed.api.v1alpha1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SchemaService } from "./schema";
import type { WriteSchemaResponse } from "./schema";
import type { WriteSchemaRequest } from "./schema";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ReadSchemaResponse } from "./schema";
import type { ReadSchemaRequest } from "./schema";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * SchemaService implements operations on a Permissions System's Schema.
 *
 * @generated from protobuf service authzed.api.v1alpha1.SchemaService
 */
export interface ISchemaServiceClient {
    /**
     * Read returns the current Object Definitions for a Permissions System.
     *
     * Errors include:
     * - INVALID_ARGUMENT: a provided value has failed to semantically validate
     * - NOT_FOUND: one of the Object Definitions being requested does not exist
     *
     * @generated from protobuf rpc: ReadSchema(authzed.api.v1alpha1.ReadSchemaRequest) returns (authzed.api.v1alpha1.ReadSchemaResponse);
     */
    readSchema(input: ReadSchemaRequest, options?: RpcOptions): UnaryCall<ReadSchemaRequest, ReadSchemaResponse>;
    /**
     * Write overwrites the current Object Definitions for a Permissions System.
     *
     * Any Object Definitions that exist, but are not included will be deleted.
     *
     * @generated from protobuf rpc: WriteSchema(authzed.api.v1alpha1.WriteSchemaRequest) returns (authzed.api.v1alpha1.WriteSchemaResponse);
     */
    writeSchema(input: WriteSchemaRequest, options?: RpcOptions): UnaryCall<WriteSchemaRequest, WriteSchemaResponse>;
}
/**
 * SchemaService implements operations on a Permissions System's Schema.
 *
 * @generated from protobuf service authzed.api.v1alpha1.SchemaService
 */
export class SchemaServiceClient implements ISchemaServiceClient, ServiceInfo {
    typeName = SchemaService.typeName;
    methods = SchemaService.methods;
    options = SchemaService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Read returns the current Object Definitions for a Permissions System.
     *
     * Errors include:
     * - INVALID_ARGUMENT: a provided value has failed to semantically validate
     * - NOT_FOUND: one of the Object Definitions being requested does not exist
     *
     * @generated from protobuf rpc: ReadSchema(authzed.api.v1alpha1.ReadSchemaRequest) returns (authzed.api.v1alpha1.ReadSchemaResponse);
     */
    readSchema(input: ReadSchemaRequest, options?: RpcOptions): UnaryCall<ReadSchemaRequest, ReadSchemaResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ReadSchemaRequest, ReadSchemaResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Write overwrites the current Object Definitions for a Permissions System.
     *
     * Any Object Definitions that exist, but are not included will be deleted.
     *
     * @generated from protobuf rpc: WriteSchema(authzed.api.v1alpha1.WriteSchemaRequest) returns (authzed.api.v1alpha1.WriteSchemaResponse);
     */
    writeSchema(input: WriteSchemaRequest, options?: RpcOptions): UnaryCall<WriteSchemaRequest, WriteSchemaResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<WriteSchemaRequest, WriteSchemaResponse>("unary", this._transport, method, opt, input);
    }
}

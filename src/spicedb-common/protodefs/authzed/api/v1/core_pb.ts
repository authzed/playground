// @generated by protoc-gen-es v2.4.0 with parameter "target=ts"
// @generated from file authzed/api/v1/core.proto (package authzed.api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_validate_validate } from "../../../validate/validate_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file authzed/api/v1/core.proto.
 */
export const file_authzed_api_v1_core: GenFile = /*@__PURE__*/
  fileDesc("ChlhdXRoemVkL2FwaS92MS9jb3JlLnByb3RvEg5hdXRoemVkLmFwaS52MSKMAgoMUmVsYXRpb25zaGlwEjsKCHJlc291cmNlGAEgASgLMh8uYXV0aHplZC5hcGkudjEuT2JqZWN0UmVmZXJlbmNlQgj6QgWKAQIQARI5CghyZWxhdGlvbhgCIAEoCUIn+kIkciIoQDIeXlthLXpdW2EtejAtOV9dezEsNjJ9W2EtejAtOV0kEjsKB3N1YmplY3QYAyABKAsyIC5hdXRoemVkLmFwaS52MS5TdWJqZWN0UmVmZXJlbmNlQgj6QgWKAQIQARJHCg9vcHRpb25hbF9jYXZlYXQYBCABKAsyJC5hdXRoemVkLmFwaS52MS5Db250ZXh0dWFsaXplZENhdmVhdEII+kIFigECEAAikQEKFENvbnRleHR1YWxpemVkQ2F2ZWF0EkUKC2NhdmVhdF9uYW1lGAEgASgJQjD6Qi1yKyiAATImXihbYS16QS1aMC05X11bYS16QS1aMC05L198LV17MCwxMjd9KSQSMgoHY29udGV4dBgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3RCCPpCBYoBAhAAIpQBChBTdWJqZWN0UmVmZXJlbmNlEjkKBm9iamVjdBgBIAEoCzIfLmF1dGh6ZWQuYXBpLnYxLk9iamVjdFJlZmVyZW5jZUII+kIFigECEAESRQoRb3B0aW9uYWxfcmVsYXRpb24YAiABKAlCKvpCJ3IlKEAyIV4oW2Etel1bYS16MC05X117MSw2Mn1bYS16MC05XSk/JCK6AQoPT2JqZWN0UmVmZXJlbmNlEl0KC29iamVjdF90eXBlGAEgASgJQkj6QkVyQyiAATI+XihbYS16XVthLXowLTlfXXsxLDYxfVthLXowLTldLyk/W2Etel1bYS16MC05X117MSw2Mn1bYS16MC05XSQSSAoJb2JqZWN0X2lkGAIgASgJQjX6QjJyMCiAATIrXigoW2EtekEtWjAtOV9dW2EtekEtWjAtOS9ffC1dezAsMTI3fSl8XCopJCIiCghaZWRUb2tlbhIWCgV0b2tlbhgBIAEoCUIH+kIEcgIgASKIAgoSUmVsYXRpb25zaGlwVXBkYXRlEksKCW9wZXJhdGlvbhgBIAEoDjIsLmF1dGh6ZWQuYXBpLnYxLlJlbGF0aW9uc2hpcFVwZGF0ZS5PcGVyYXRpb25CCvpCB4IBBBABIAASPAoMcmVsYXRpb25zaGlwGAIgASgLMhwuYXV0aHplZC5hcGkudjEuUmVsYXRpb25zaGlwQgj6QgWKAQIQASJnCglPcGVyYXRpb24SGQoVT1BFUkFUSU9OX1VOU1BFQ0lGSUVEEAASFAoQT1BFUkFUSU9OX0NSRUFURRABEhMKD09QRVJBVElPTl9UT1VDSBACEhQKEE9QRVJBVElPTl9ERUxFVEUQAyLyAQoaUGVybWlzc2lvblJlbGF0aW9uc2hpcFRyZWUSOwoMaW50ZXJtZWRpYXRlGAEgASgLMiMuYXV0aHplZC5hcGkudjEuQWxnZWJyYWljU3ViamVjdFNldEgAEjAKBGxlYWYYAiABKAsyIC5hdXRoemVkLmFwaS52MS5EaXJlY3RTdWJqZWN0U2V0SAASOAoPZXhwYW5kZWRfb2JqZWN0GAMgASgLMh8uYXV0aHplZC5hcGkudjEuT2JqZWN0UmVmZXJlbmNlEhkKEWV4cGFuZGVkX3JlbGF0aW9uGAQgASgJQhAKCXRyZWVfdHlwZRID+EIBIqICChNBbGdlYnJhaWNTdWJqZWN0U2V0EkwKCW9wZXJhdGlvbhgBIAEoDjItLmF1dGh6ZWQuYXBpLnYxLkFsZ2VicmFpY1N1YmplY3RTZXQuT3BlcmF0aW9uQgr6QgeCAQQQASAAEksKCGNoaWxkcmVuGAIgAygLMiouYXV0aHplZC5hcGkudjEuUGVybWlzc2lvblJlbGF0aW9uc2hpcFRyZWVCDfpCCpIBByIFigECEAEicAoJT3BlcmF0aW9uEhkKFU9QRVJBVElPTl9VTlNQRUNJRklFRBAAEhMKD09QRVJBVElPTl9VTklPThABEhoKFk9QRVJBVElPTl9JTlRFUlNFQ1RJT04QAhIXChNPUEVSQVRJT05fRVhDTFVTSU9OEAMiRgoQRGlyZWN0U3ViamVjdFNldBIyCghzdWJqZWN0cxgBIAMoCzIgLmF1dGh6ZWQuYXBpLnYxLlN1YmplY3RSZWZlcmVuY2UiPwoRUGFydGlhbENhdmVhdEluZm8SKgoYbWlzc2luZ19yZXF1aXJlZF9jb250ZXh0GAEgAygJQgj6QgWSAQIIAUJIChJjb20uYXV0aHplZC5hcGkudjFaMmdpdGh1Yi5jb20vYXV0aHplZC9hdXRoemVkLWdvL3Byb3RvL2F1dGh6ZWQvYXBpL3YxYgZwcm90bzM", [file_google_protobuf_struct, file_validate_validate]);

/**
 * Relationship specifies how a resource relates to a subject. Relationships
 * form the data for the graph over which all permissions questions are
 * answered.
 *
 * @generated from message authzed.api.v1.Relationship
 */
export type Relationship = Message<"authzed.api.v1.Relationship"> & {
  /**
   * resource is the resource to which the subject is related, in some manner
   *
   * @generated from field: authzed.api.v1.ObjectReference resource = 1;
   */
  resource?: ObjectReference;

  /**
   * relation is how the resource and subject are related.
   *
   * @generated from field: string relation = 2;
   */
  relation: string;

  /**
   * subject is the subject to which the resource is related, in some manner.
   *
   * @generated from field: authzed.api.v1.SubjectReference subject = 3;
   */
  subject?: SubjectReference;

  /**
   * optional_caveat is a reference to a the caveat that must be enforced over the relationship
   *
   * @generated from field: authzed.api.v1.ContextualizedCaveat optional_caveat = 4;
   */
  optionalCaveat?: ContextualizedCaveat;
};

/**
 * Describes the message authzed.api.v1.Relationship.
 * Use `create(RelationshipSchema)` to create a new message.
 */
export const RelationshipSchema: GenMessage<Relationship> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 0);

/**
 * *
 * ContextualizedCaveat represents a reference to a caveat to be used by caveated relationships.
 * The context consists of key-value pairs that will be injected at evaluation time.
 * The keys must match the arguments defined on the caveat in the schema.
 *
 * @generated from message authzed.api.v1.ContextualizedCaveat
 */
export type ContextualizedCaveat = Message<"authzed.api.v1.ContextualizedCaveat"> & {
  /**
   * * caveat_name is the name of the caveat expression to use, as defined in the schema *
   *
   * @generated from field: string caveat_name = 1;
   */
  caveatName: string;

  /**
   * * context consists of any named values that are defined at write time for the caveat expression *
   *
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: JsonObject;
};

/**
 * Describes the message authzed.api.v1.ContextualizedCaveat.
 * Use `create(ContextualizedCaveatSchema)` to create a new message.
 */
export const ContextualizedCaveatSchema: GenMessage<ContextualizedCaveat> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 1);

/**
 * SubjectReference is used for referring to the subject portion of a
 * Relationship. The relation component is optional and is used for defining a
 * sub-relation on the subject, e.g. group:123#members
 *
 * @generated from message authzed.api.v1.SubjectReference
 */
export type SubjectReference = Message<"authzed.api.v1.SubjectReference"> & {
  /**
   * @generated from field: authzed.api.v1.ObjectReference object = 1;
   */
  object?: ObjectReference;

  /**
   * @generated from field: string optional_relation = 2;
   */
  optionalRelation: string;
};

/**
 * Describes the message authzed.api.v1.SubjectReference.
 * Use `create(SubjectReferenceSchema)` to create a new message.
 */
export const SubjectReferenceSchema: GenMessage<SubjectReference> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 2);

/**
 * ObjectReference is used to refer to a specific object in the system.
 *
 * @generated from message authzed.api.v1.ObjectReference
 */
export type ObjectReference = Message<"authzed.api.v1.ObjectReference"> & {
  /**
   * @generated from field: string object_type = 1;
   */
  objectType: string;

  /**
   * @generated from field: string object_id = 2;
   */
  objectId: string;
};

/**
 * Describes the message authzed.api.v1.ObjectReference.
 * Use `create(ObjectReferenceSchema)` to create a new message.
 */
export const ObjectReferenceSchema: GenMessage<ObjectReference> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 3);

/**
 * ZedToken is used to provide causality metadata between Write and Check
 * requests.
 *
 * See the authzed.api.v1.Consistency message for more information.
 *
 * @generated from message authzed.api.v1.ZedToken
 */
export type ZedToken = Message<"authzed.api.v1.ZedToken"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message authzed.api.v1.ZedToken.
 * Use `create(ZedTokenSchema)` to create a new message.
 */
export const ZedTokenSchema: GenMessage<ZedToken> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 4);

/**
 * RelationshipUpdate is used for mutating a single relationship within the
 * service.
 *
 * CREATE will create the relationship only if it doesn't exist, and error
 * otherwise.
 *
 * TOUCH will upsert the relationship, and will not error if it
 * already exists.
 *
 * DELETE will delete the relationship. If the relationship does not exist,
 * this operation will no-op.
 *
 * @generated from message authzed.api.v1.RelationshipUpdate
 */
export type RelationshipUpdate = Message<"authzed.api.v1.RelationshipUpdate"> & {
  /**
   * @generated from field: authzed.api.v1.RelationshipUpdate.Operation operation = 1;
   */
  operation: RelationshipUpdate_Operation;

  /**
   * @generated from field: authzed.api.v1.Relationship relationship = 2;
   */
  relationship?: Relationship;
};

/**
 * Describes the message authzed.api.v1.RelationshipUpdate.
 * Use `create(RelationshipUpdateSchema)` to create a new message.
 */
export const RelationshipUpdateSchema: GenMessage<RelationshipUpdate> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 5);

/**
 * @generated from enum authzed.api.v1.RelationshipUpdate.Operation
 */
export enum RelationshipUpdate_Operation {
  /**
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OPERATION_CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: OPERATION_TOUCH = 2;
   */
  TOUCH = 2,

  /**
   * @generated from enum value: OPERATION_DELETE = 3;
   */
  DELETE = 3,
}

/**
 * Describes the enum authzed.api.v1.RelationshipUpdate.Operation.
 */
export const RelationshipUpdate_OperationSchema: GenEnum<RelationshipUpdate_Operation> = /*@__PURE__*/
  enumDesc(file_authzed_api_v1_core, 5, 0);

/**
 * PermissionRelationshipTree is used for representing a tree of a resource and
 * its permission relationships with other objects.
 *
 * @generated from message authzed.api.v1.PermissionRelationshipTree
 */
export type PermissionRelationshipTree = Message<"authzed.api.v1.PermissionRelationshipTree"> & {
  /**
   * @generated from oneof authzed.api.v1.PermissionRelationshipTree.tree_type
   */
  treeType: {
    /**
     * @generated from field: authzed.api.v1.AlgebraicSubjectSet intermediate = 1;
     */
    value: AlgebraicSubjectSet;
    case: "intermediate";
  } | {
    /**
     * @generated from field: authzed.api.v1.DirectSubjectSet leaf = 2;
     */
    value: DirectSubjectSet;
    case: "leaf";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: authzed.api.v1.ObjectReference expanded_object = 3;
   */
  expandedObject?: ObjectReference;

  /**
   * @generated from field: string expanded_relation = 4;
   */
  expandedRelation: string;
};

/**
 * Describes the message authzed.api.v1.PermissionRelationshipTree.
 * Use `create(PermissionRelationshipTreeSchema)` to create a new message.
 */
export const PermissionRelationshipTreeSchema: GenMessage<PermissionRelationshipTree> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 6);

/**
 * AlgebraicSubjectSet is a subject set which is computed based on applying the
 * specified operation to the operands according to the algebra of sets.
 *
 * UNION is a logical set containing the subject members from all operands.
 *
 * INTERSECTION is a logical set containing only the subject members which are
 * present in all operands.
 *
 * EXCLUSION is a logical set containing only the subject members which are
 * present in the first operand, and none of the other operands.
 *
 * @generated from message authzed.api.v1.AlgebraicSubjectSet
 */
export type AlgebraicSubjectSet = Message<"authzed.api.v1.AlgebraicSubjectSet"> & {
  /**
   * @generated from field: authzed.api.v1.AlgebraicSubjectSet.Operation operation = 1;
   */
  operation: AlgebraicSubjectSet_Operation;

  /**
   * @generated from field: repeated authzed.api.v1.PermissionRelationshipTree children = 2;
   */
  children: PermissionRelationshipTree[];
};

/**
 * Describes the message authzed.api.v1.AlgebraicSubjectSet.
 * Use `create(AlgebraicSubjectSetSchema)` to create a new message.
 */
export const AlgebraicSubjectSetSchema: GenMessage<AlgebraicSubjectSet> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 7);

/**
 * @generated from enum authzed.api.v1.AlgebraicSubjectSet.Operation
 */
export enum AlgebraicSubjectSet_Operation {
  /**
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OPERATION_UNION = 1;
   */
  UNION = 1,

  /**
   * @generated from enum value: OPERATION_INTERSECTION = 2;
   */
  INTERSECTION = 2,

  /**
   * @generated from enum value: OPERATION_EXCLUSION = 3;
   */
  EXCLUSION = 3,
}

/**
 * Describes the enum authzed.api.v1.AlgebraicSubjectSet.Operation.
 */
export const AlgebraicSubjectSet_OperationSchema: GenEnum<AlgebraicSubjectSet_Operation> = /*@__PURE__*/
  enumDesc(file_authzed_api_v1_core, 7, 0);

/**
 * DirectSubjectSet is a subject set which is simply a collection of subjects.
 *
 * @generated from message authzed.api.v1.DirectSubjectSet
 */
export type DirectSubjectSet = Message<"authzed.api.v1.DirectSubjectSet"> & {
  /**
   * @generated from field: repeated authzed.api.v1.SubjectReference subjects = 1;
   */
  subjects: SubjectReference[];
};

/**
 * Describes the message authzed.api.v1.DirectSubjectSet.
 * Use `create(DirectSubjectSetSchema)` to create a new message.
 */
export const DirectSubjectSetSchema: GenMessage<DirectSubjectSet> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 8);

/**
 * PartialCaveatInfo carries information necessary for the client to take action
 * in the event a response contains a partially evaluated caveat
 *
 * @generated from message authzed.api.v1.PartialCaveatInfo
 */
export type PartialCaveatInfo = Message<"authzed.api.v1.PartialCaveatInfo"> & {
  /**
   * missing_required_context is a list of one or more fields that were missing and prevented caveats
   * from being fully evaluated
   *
   * @generated from field: repeated string missing_required_context = 1;
   */
  missingRequiredContext: string[];
};

/**
 * Describes the message authzed.api.v1.PartialCaveatInfo.
 * Use `create(PartialCaveatInfoSchema)` to create a new message.
 */
export const PartialCaveatInfoSchema: GenMessage<PartialCaveatInfo> = /*@__PURE__*/
  messageDesc(file_authzed_api_v1_core, 9);


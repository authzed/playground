// @generated by protobuf-ts 2.9.1 with parameter long_type_string,generate_dependencies,optimize_code_size
// @generated from protobuf file "authzed/api/v0/developer.proto" (package "authzed.api.v0", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DeveloperService } from "./developer";
import type { FormatSchemaResponse } from "./developer";
import type { FormatSchemaRequest } from "./developer";
import type { UpgradeSchemaResponse } from "./developer";
import type { UpgradeSchemaRequest } from "./developer";
import type { LookupShareResponse } from "./developer";
import type { LookupShareRequest } from "./developer";
import type { ShareResponse } from "./developer";
import type { ShareRequest } from "./developer";
import type { ValidateResponse } from "./developer";
import type { ValidateRequest } from "./developer";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { EditCheckResponse } from "./developer";
import type { EditCheckRequest } from "./developer";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service authzed.api.v0.DeveloperService
 */
export interface IDeveloperServiceClient {
    /**
     * @generated from protobuf rpc: EditCheck(authzed.api.v0.EditCheckRequest) returns (authzed.api.v0.EditCheckResponse);
     */
    editCheck(input: EditCheckRequest, options?: RpcOptions): UnaryCall<EditCheckRequest, EditCheckResponse>;
    /**
     * @generated from protobuf rpc: Validate(authzed.api.v0.ValidateRequest) returns (authzed.api.v0.ValidateResponse);
     */
    validate(input: ValidateRequest, options?: RpcOptions): UnaryCall<ValidateRequest, ValidateResponse>;
    /**
     * @generated from protobuf rpc: Share(authzed.api.v0.ShareRequest) returns (authzed.api.v0.ShareResponse);
     */
    share(input: ShareRequest, options?: RpcOptions): UnaryCall<ShareRequest, ShareResponse>;
    /**
     * @generated from protobuf rpc: LookupShared(authzed.api.v0.LookupShareRequest) returns (authzed.api.v0.LookupShareResponse);
     */
    lookupShared(input: LookupShareRequest, options?: RpcOptions): UnaryCall<LookupShareRequest, LookupShareResponse>;
    /**
     * @generated from protobuf rpc: UpgradeSchema(authzed.api.v0.UpgradeSchemaRequest) returns (authzed.api.v0.UpgradeSchemaResponse);
     */
    upgradeSchema(input: UpgradeSchemaRequest, options?: RpcOptions): UnaryCall<UpgradeSchemaRequest, UpgradeSchemaResponse>;
    /**
     * @generated from protobuf rpc: FormatSchema(authzed.api.v0.FormatSchemaRequest) returns (authzed.api.v0.FormatSchemaResponse);
     */
    formatSchema(input: FormatSchemaRequest, options?: RpcOptions): UnaryCall<FormatSchemaRequest, FormatSchemaResponse>;
}
/**
 * @generated from protobuf service authzed.api.v0.DeveloperService
 */
export class DeveloperServiceClient implements IDeveloperServiceClient, ServiceInfo {
    typeName = DeveloperService.typeName;
    methods = DeveloperService.methods;
    options = DeveloperService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: EditCheck(authzed.api.v0.EditCheckRequest) returns (authzed.api.v0.EditCheckResponse);
     */
    editCheck(input: EditCheckRequest, options?: RpcOptions): UnaryCall<EditCheckRequest, EditCheckResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<EditCheckRequest, EditCheckResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Validate(authzed.api.v0.ValidateRequest) returns (authzed.api.v0.ValidateResponse);
     */
    validate(input: ValidateRequest, options?: RpcOptions): UnaryCall<ValidateRequest, ValidateResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ValidateRequest, ValidateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Share(authzed.api.v0.ShareRequest) returns (authzed.api.v0.ShareResponse);
     */
    share(input: ShareRequest, options?: RpcOptions): UnaryCall<ShareRequest, ShareResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ShareRequest, ShareResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LookupShared(authzed.api.v0.LookupShareRequest) returns (authzed.api.v0.LookupShareResponse);
     */
    lookupShared(input: LookupShareRequest, options?: RpcOptions): UnaryCall<LookupShareRequest, LookupShareResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LookupShareRequest, LookupShareResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpgradeSchema(authzed.api.v0.UpgradeSchemaRequest) returns (authzed.api.v0.UpgradeSchemaResponse);
     */
    upgradeSchema(input: UpgradeSchemaRequest, options?: RpcOptions): UnaryCall<UpgradeSchemaRequest, UpgradeSchemaResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpgradeSchemaRequest, UpgradeSchemaResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FormatSchema(authzed.api.v0.FormatSchemaRequest) returns (authzed.api.v0.FormatSchemaResponse);
     */
    formatSchema(input: FormatSchemaRequest, options?: RpcOptions): UnaryCall<FormatSchemaRequest, FormatSchemaResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<FormatSchemaRequest, FormatSchemaResponse>("unary", this._transport, method, opt, input);
    }
}

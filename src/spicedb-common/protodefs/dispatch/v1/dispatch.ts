// @generated by protobuf-ts 2.9.1 with parameter long_type_string,generate_dependencies,optimize_code_size
// @generated from protobuf file "dispatch/v1/dispatch.proto" (package "dispatch.v1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../google/protobuf/duration";
import { Struct } from "../../google/protobuf/struct";
import { RelationTupleTreeNode } from "../../core/v1/core";
import { CaveatExpression } from "../../core/v1/core";
import { ObjectAndRelation } from "../../core/v1/core";
import { RelationReference } from "../../core/v1/core";
/**
 * @generated from protobuf message dispatch.v1.DispatchCheckRequest
 */
export interface DispatchCheckRequest {
    /**
     * @generated from protobuf field: dispatch.v1.ResolverMeta metadata = 1;
     */
    metadata?: ResolverMeta;
    /**
     * @generated from protobuf field: core.v1.RelationReference resource_relation = 2;
     */
    resourceRelation?: RelationReference;
    /**
     * @generated from protobuf field: repeated string resource_ids = 3;
     */
    resourceIds: string[];
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation subject = 4;
     */
    subject?: ObjectAndRelation;
    /**
     * @generated from protobuf field: dispatch.v1.DispatchCheckRequest.ResultsSetting results_setting = 5;
     */
    resultsSetting: DispatchCheckRequest_ResultsSetting;
    /**
     * @generated from protobuf field: dispatch.v1.DispatchCheckRequest.DebugSetting debug = 6;
     */
    debug: DispatchCheckRequest_DebugSetting;
    /**
     * *
     * check_hints are hints provided to the check call to help the resolver optimize the check
     * by skipping calculations for the provided checks. The string key is the fully qualified
     * "relationtuple"-string for the problem, e.g. `document:example#relation@user:someuser`.
     * It is up to the caller to *ensure* that the hints provided are correct; if incorrect,
     * the resolver may return incorrect results which will in turn be cached.
     *
     * @generated from protobuf field: repeated dispatch.v1.CheckHint check_hints = 7;
     */
    checkHints: CheckHint[];
}
/**
 * @generated from protobuf enum dispatch.v1.DispatchCheckRequest.DebugSetting
 */
export enum DispatchCheckRequest_DebugSetting {
    /**
     * @generated from protobuf enum value: NO_DEBUG = 0;
     */
    NO_DEBUG = 0,
    /**
     * @generated from protobuf enum value: ENABLE_BASIC_DEBUGGING = 1;
     */
    ENABLE_BASIC_DEBUGGING = 1,
    /**
     * @generated from protobuf enum value: ENABLE_TRACE_DEBUGGING = 2;
     */
    ENABLE_TRACE_DEBUGGING = 2
}
/**
 * @generated from protobuf enum dispatch.v1.DispatchCheckRequest.ResultsSetting
 */
export enum DispatchCheckRequest_ResultsSetting {
    /**
     * @generated from protobuf enum value: REQUIRE_ALL_RESULTS = 0;
     */
    REQUIRE_ALL_RESULTS = 0,
    /**
     * @generated from protobuf enum value: ALLOW_SINGLE_RESULT = 1;
     */
    ALLOW_SINGLE_RESULT = 1
}
/**
 * @generated from protobuf message dispatch.v1.CheckHint
 */
export interface CheckHint {
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation resource = 1;
     */
    resource?: ObjectAndRelation;
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation subject = 2;
     */
    subject?: ObjectAndRelation;
    /**
     * @generated from protobuf field: string ttu_computed_userset_relation = 3;
     */
    ttuComputedUsersetRelation: string;
    /**
     * @generated from protobuf field: dispatch.v1.ResourceCheckResult result = 4;
     */
    result?: ResourceCheckResult;
}
/**
 * @generated from protobuf message dispatch.v1.DispatchCheckResponse
 */
export interface DispatchCheckResponse {
    /**
     * @generated from protobuf field: dispatch.v1.ResponseMeta metadata = 1;
     */
    metadata?: ResponseMeta;
    /**
     * @generated from protobuf field: map<string, dispatch.v1.ResourceCheckResult> results_by_resource_id = 2;
     */
    resultsByResourceId: {
        [key: string]: ResourceCheckResult;
    };
}
/**
 * @generated from protobuf message dispatch.v1.ResourceCheckResult
 */
export interface ResourceCheckResult {
    /**
     * @generated from protobuf field: dispatch.v1.ResourceCheckResult.Membership membership = 1;
     */
    membership: ResourceCheckResult_Membership;
    /**
     * @generated from protobuf field: core.v1.CaveatExpression expression = 2;
     */
    expression?: CaveatExpression;
    /**
     * @generated from protobuf field: repeated string missing_expr_fields = 3;
     */
    missingExprFields: string[];
}
/**
 * @generated from protobuf enum dispatch.v1.ResourceCheckResult.Membership
 */
export enum ResourceCheckResult_Membership {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: NOT_MEMBER = 1;
     */
    NOT_MEMBER = 1,
    /**
     * @generated from protobuf enum value: MEMBER = 2;
     */
    MEMBER = 2,
    /**
     * @generated from protobuf enum value: CAVEATED_MEMBER = 3;
     */
    CAVEATED_MEMBER = 3
}
/**
 * @generated from protobuf message dispatch.v1.DispatchExpandRequest
 */
export interface DispatchExpandRequest {
    /**
     * @generated from protobuf field: dispatch.v1.ResolverMeta metadata = 1;
     */
    metadata?: ResolverMeta;
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation resource_and_relation = 2;
     */
    resourceAndRelation?: ObjectAndRelation;
    /**
     * @generated from protobuf field: dispatch.v1.DispatchExpandRequest.ExpansionMode expansion_mode = 3;
     */
    expansionMode: DispatchExpandRequest_ExpansionMode;
}
/**
 * @generated from protobuf enum dispatch.v1.DispatchExpandRequest.ExpansionMode
 */
export enum DispatchExpandRequest_ExpansionMode {
    /**
     * @generated from protobuf enum value: SHALLOW = 0;
     */
    SHALLOW = 0,
    /**
     * @generated from protobuf enum value: RECURSIVE = 1;
     */
    RECURSIVE = 1
}
/**
 * @generated from protobuf message dispatch.v1.DispatchExpandResponse
 */
export interface DispatchExpandResponse {
    /**
     * @generated from protobuf field: dispatch.v1.ResponseMeta metadata = 1;
     */
    metadata?: ResponseMeta;
    /**
     * @generated from protobuf field: core.v1.RelationTupleTreeNode tree_node = 2;
     */
    treeNode?: RelationTupleTreeNode;
}
/**
 * @generated from protobuf message dispatch.v1.Cursor
 */
export interface Cursor {
    /**
     * @generated from protobuf field: repeated string sections = 2;
     */
    sections: string[];
    /**
     * @generated from protobuf field: uint32 dispatch_version = 3;
     */
    dispatchVersion: number;
}
/**
 * @generated from protobuf message dispatch.v1.DispatchLookupResources2Request
 */
export interface DispatchLookupResources2Request {
    /**
     * @generated from protobuf field: dispatch.v1.ResolverMeta metadata = 1;
     */
    metadata?: ResolverMeta;
    /**
     * @generated from protobuf field: core.v1.RelationReference resource_relation = 2;
     */
    resourceRelation?: RelationReference;
    /**
     * @generated from protobuf field: core.v1.RelationReference subject_relation = 3;
     */
    subjectRelation?: RelationReference;
    /**
     * @generated from protobuf field: repeated string subject_ids = 4;
     */
    subjectIds: string[];
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation terminal_subject = 5;
     */
    terminalSubject?: ObjectAndRelation;
    /**
     * @generated from protobuf field: google.protobuf.Struct context = 6;
     */
    context?: Struct;
    /**
     * @generated from protobuf field: dispatch.v1.Cursor optional_cursor = 7;
     */
    optionalCursor?: Cursor;
    /**
     * @generated from protobuf field: uint32 optional_limit = 8;
     */
    optionalLimit: number;
}
/**
 * @generated from protobuf message dispatch.v1.PossibleResource
 */
export interface PossibleResource {
    /**
     * @generated from protobuf field: string resource_id = 1;
     */
    resourceId: string;
    /**
     * @generated from protobuf field: repeated string for_subject_ids = 2;
     */
    forSubjectIds: string[];
    /**
     * @generated from protobuf field: repeated string missing_context_params = 3;
     */
    missingContextParams: string[];
}
/**
 * @generated from protobuf message dispatch.v1.DispatchLookupResources2Response
 */
export interface DispatchLookupResources2Response {
    /**
     * @generated from protobuf field: dispatch.v1.PossibleResource resource = 1;
     */
    resource?: PossibleResource;
    /**
     * @generated from protobuf field: dispatch.v1.ResponseMeta metadata = 2;
     */
    metadata?: ResponseMeta;
    /**
     * @generated from protobuf field: dispatch.v1.Cursor after_response_cursor = 3;
     */
    afterResponseCursor?: Cursor;
}
/**
 * @generated from protobuf message dispatch.v1.DispatchLookupSubjectsRequest
 */
export interface DispatchLookupSubjectsRequest {
    /**
     * @generated from protobuf field: dispatch.v1.ResolverMeta metadata = 1;
     */
    metadata?: ResolverMeta;
    /**
     * @generated from protobuf field: core.v1.RelationReference resource_relation = 2;
     */
    resourceRelation?: RelationReference;
    /**
     * @generated from protobuf field: repeated string resource_ids = 3;
     */
    resourceIds: string[];
    /**
     * @generated from protobuf field: core.v1.RelationReference subject_relation = 4;
     */
    subjectRelation?: RelationReference;
}
/**
 * @generated from protobuf message dispatch.v1.FoundSubject
 */
export interface FoundSubject {
    /**
     * @generated from protobuf field: string subject_id = 1;
     */
    subjectId: string;
    /**
     * @generated from protobuf field: core.v1.CaveatExpression caveat_expression = 2;
     */
    caveatExpression?: CaveatExpression;
    /**
     * @generated from protobuf field: repeated dispatch.v1.FoundSubject excluded_subjects = 3;
     */
    excludedSubjects: FoundSubject[];
}
/**
 * @generated from protobuf message dispatch.v1.FoundSubjects
 */
export interface FoundSubjects {
    /**
     * @generated from protobuf field: repeated dispatch.v1.FoundSubject found_subjects = 1;
     */
    foundSubjects: FoundSubject[];
}
/**
 * @generated from protobuf message dispatch.v1.DispatchLookupSubjectsResponse
 */
export interface DispatchLookupSubjectsResponse {
    /**
     * @generated from protobuf field: map<string, dispatch.v1.FoundSubjects> found_subjects_by_resource_id = 1;
     */
    foundSubjectsByResourceId: {
        [key: string]: FoundSubjects;
    };
    /**
     * @generated from protobuf field: dispatch.v1.ResponseMeta metadata = 2;
     */
    metadata?: ResponseMeta;
}
/**
 * @generated from protobuf message dispatch.v1.ResolverMeta
 */
export interface ResolverMeta {
    /**
     * @generated from protobuf field: string at_revision = 1;
     */
    atRevision: string;
    /**
     * @generated from protobuf field: uint32 depth_remaining = 2;
     */
    depthRemaining: number;
    /**
     * @deprecated
     * @generated from protobuf field: string request_id = 3 [deprecated = true];
     */
    requestId: string;
    /**
     * @generated from protobuf field: bytes traversal_bloom = 4;
     */
    traversalBloom: Uint8Array;
}
/**
 * @generated from protobuf message dispatch.v1.ResponseMeta
 */
export interface ResponseMeta {
    /**
     * @generated from protobuf field: uint32 dispatch_count = 1;
     */
    dispatchCount: number;
    /**
     * @generated from protobuf field: uint32 depth_required = 2;
     */
    depthRequired: number;
    /**
     * @generated from protobuf field: uint32 cached_dispatch_count = 3;
     */
    cachedDispatchCount: number;
    /**
     * @generated from protobuf field: dispatch.v1.DebugInformation debug_info = 6;
     */
    debugInfo?: DebugInformation;
}
/**
 * @generated from protobuf message dispatch.v1.DebugInformation
 */
export interface DebugInformation {
    /**
     * @generated from protobuf field: dispatch.v1.CheckDebugTrace check = 1;
     */
    check?: CheckDebugTrace;
}
/**
 * @generated from protobuf message dispatch.v1.CheckDebugTrace
 */
export interface CheckDebugTrace {
    /**
     * @generated from protobuf field: dispatch.v1.DispatchCheckRequest request = 1;
     */
    request?: DispatchCheckRequest;
    /**
     * @generated from protobuf field: dispatch.v1.CheckDebugTrace.RelationType resource_relation_type = 2;
     */
    resourceRelationType: CheckDebugTrace_RelationType;
    /**
     * @generated from protobuf field: map<string, dispatch.v1.ResourceCheckResult> results = 3;
     */
    results: {
        [key: string]: ResourceCheckResult;
    };
    /**
     * @generated from protobuf field: bool is_cached_result = 4;
     */
    isCachedResult: boolean;
    /**
     * @generated from protobuf field: repeated dispatch.v1.CheckDebugTrace sub_problems = 5;
     */
    subProblems: CheckDebugTrace[];
    /**
     * @generated from protobuf field: google.protobuf.Duration duration = 6;
     */
    duration?: Duration;
    /**
     * @generated from protobuf field: string trace_id = 7;
     */
    traceId: string;
    /**
     * @generated from protobuf field: string source_id = 8;
     */
    sourceId: string;
}
/**
 * @generated from protobuf enum dispatch.v1.CheckDebugTrace.RelationType
 */
export enum CheckDebugTrace_RelationType {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: RELATION = 1;
     */
    RELATION = 1,
    /**
     * @generated from protobuf enum value: PERMISSION = 2;
     */
    PERMISSION = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class DispatchCheckRequest$Type extends MessageType<DispatchCheckRequest> {
    constructor() {
        super("dispatch.v1.DispatchCheckRequest", [
            { no: 1, name: "metadata", kind: "message", T: () => ResolverMeta, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "resource_relation", kind: "message", T: () => RelationReference, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "resource_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "subject", kind: "message", T: () => ObjectAndRelation, options: { "validate.rules": { message: { required: true } } } },
            { no: 5, name: "results_setting", kind: "enum", T: () => ["dispatch.v1.DispatchCheckRequest.ResultsSetting", DispatchCheckRequest_ResultsSetting] },
            { no: 6, name: "debug", kind: "enum", T: () => ["dispatch.v1.DispatchCheckRequest.DebugSetting", DispatchCheckRequest_DebugSetting] },
            { no: 7, name: "check_hints", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CheckHint }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchCheckRequest
 */
export const DispatchCheckRequest = new DispatchCheckRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckHint$Type extends MessageType<CheckHint> {
    constructor() {
        super("dispatch.v1.CheckHint", [
            { no: 1, name: "resource", kind: "message", T: () => ObjectAndRelation },
            { no: 2, name: "subject", kind: "message", T: () => ObjectAndRelation },
            { no: 3, name: "ttu_computed_userset_relation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "result", kind: "message", T: () => ResourceCheckResult }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.CheckHint
 */
export const CheckHint = new CheckHint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchCheckResponse$Type extends MessageType<DispatchCheckResponse> {
    constructor() {
        super("dispatch.v1.DispatchCheckResponse", [
            { no: 1, name: "metadata", kind: "message", T: () => ResponseMeta },
            { no: 2, name: "results_by_resource_id", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => ResourceCheckResult } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchCheckResponse
 */
export const DispatchCheckResponse = new DispatchCheckResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceCheckResult$Type extends MessageType<ResourceCheckResult> {
    constructor() {
        super("dispatch.v1.ResourceCheckResult", [
            { no: 1, name: "membership", kind: "enum", T: () => ["dispatch.v1.ResourceCheckResult.Membership", ResourceCheckResult_Membership] },
            { no: 2, name: "expression", kind: "message", T: () => CaveatExpression },
            { no: 3, name: "missing_expr_fields", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.ResourceCheckResult
 */
export const ResourceCheckResult = new ResourceCheckResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchExpandRequest$Type extends MessageType<DispatchExpandRequest> {
    constructor() {
        super("dispatch.v1.DispatchExpandRequest", [
            { no: 1, name: "metadata", kind: "message", T: () => ResolverMeta, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "resource_and_relation", kind: "message", T: () => ObjectAndRelation, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "expansion_mode", kind: "enum", T: () => ["dispatch.v1.DispatchExpandRequest.ExpansionMode", DispatchExpandRequest_ExpansionMode] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchExpandRequest
 */
export const DispatchExpandRequest = new DispatchExpandRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchExpandResponse$Type extends MessageType<DispatchExpandResponse> {
    constructor() {
        super("dispatch.v1.DispatchExpandResponse", [
            { no: 1, name: "metadata", kind: "message", T: () => ResponseMeta },
            { no: 2, name: "tree_node", kind: "message", T: () => RelationTupleTreeNode }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchExpandResponse
 */
export const DispatchExpandResponse = new DispatchExpandResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Cursor$Type extends MessageType<Cursor> {
    constructor() {
        super("dispatch.v1.Cursor", [
            { no: 2, name: "sections", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "dispatch_version", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.Cursor
 */
export const Cursor = new Cursor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchLookupResources2Request$Type extends MessageType<DispatchLookupResources2Request> {
    constructor() {
        super("dispatch.v1.DispatchLookupResources2Request", [
            { no: 1, name: "metadata", kind: "message", T: () => ResolverMeta, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "resource_relation", kind: "message", T: () => RelationReference, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "subject_relation", kind: "message", T: () => RelationReference, options: { "validate.rules": { message: { required: true } } } },
            { no: 4, name: "subject_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "terminal_subject", kind: "message", T: () => ObjectAndRelation, options: { "validate.rules": { message: { required: true } } } },
            { no: 6, name: "context", kind: "message", T: () => Struct },
            { no: 7, name: "optional_cursor", kind: "message", T: () => Cursor },
            { no: 8, name: "optional_limit", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchLookupResources2Request
 */
export const DispatchLookupResources2Request = new DispatchLookupResources2Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PossibleResource$Type extends MessageType<PossibleResource> {
    constructor() {
        super("dispatch.v1.PossibleResource", [
            { no: 1, name: "resource_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "for_subject_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "missing_context_params", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.PossibleResource
 */
export const PossibleResource = new PossibleResource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchLookupResources2Response$Type extends MessageType<DispatchLookupResources2Response> {
    constructor() {
        super("dispatch.v1.DispatchLookupResources2Response", [
            { no: 1, name: "resource", kind: "message", T: () => PossibleResource },
            { no: 2, name: "metadata", kind: "message", T: () => ResponseMeta },
            { no: 3, name: "after_response_cursor", kind: "message", T: () => Cursor }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchLookupResources2Response
 */
export const DispatchLookupResources2Response = new DispatchLookupResources2Response$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchLookupSubjectsRequest$Type extends MessageType<DispatchLookupSubjectsRequest> {
    constructor() {
        super("dispatch.v1.DispatchLookupSubjectsRequest", [
            { no: 1, name: "metadata", kind: "message", T: () => ResolverMeta, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "resource_relation", kind: "message", T: () => RelationReference, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "resource_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "subject_relation", kind: "message", T: () => RelationReference, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchLookupSubjectsRequest
 */
export const DispatchLookupSubjectsRequest = new DispatchLookupSubjectsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FoundSubject$Type extends MessageType<FoundSubject> {
    constructor() {
        super("dispatch.v1.FoundSubject", [
            { no: 1, name: "subject_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "caveat_expression", kind: "message", T: () => CaveatExpression },
            { no: 3, name: "excluded_subjects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FoundSubject }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.FoundSubject
 */
export const FoundSubject = new FoundSubject$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FoundSubjects$Type extends MessageType<FoundSubjects> {
    constructor() {
        super("dispatch.v1.FoundSubjects", [
            { no: 1, name: "found_subjects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FoundSubject }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.FoundSubjects
 */
export const FoundSubjects = new FoundSubjects$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DispatchLookupSubjectsResponse$Type extends MessageType<DispatchLookupSubjectsResponse> {
    constructor() {
        super("dispatch.v1.DispatchLookupSubjectsResponse", [
            { no: 1, name: "found_subjects_by_resource_id", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => FoundSubjects } },
            { no: 2, name: "metadata", kind: "message", T: () => ResponseMeta }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DispatchLookupSubjectsResponse
 */
export const DispatchLookupSubjectsResponse = new DispatchLookupSubjectsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResolverMeta$Type extends MessageType<ResolverMeta> {
    constructor() {
        super("dispatch.v1.ResolverMeta", [
            { no: 1, name: "at_revision", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1024" } } } },
            { no: 2, name: "depth_remaining", kind: "scalar", T: 13 /*ScalarType.UINT32*/, options: { "validate.rules": { uint32: { gt: 0 } } } },
            { no: 3, name: "request_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "traversal_bloom", kind: "scalar", T: 12 /*ScalarType.BYTES*/, options: { "validate.rules": { bytes: { maxLen: "1024" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.ResolverMeta
 */
export const ResolverMeta = new ResolverMeta$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResponseMeta$Type extends MessageType<ResponseMeta> {
    constructor() {
        super("dispatch.v1.ResponseMeta", [
            { no: 1, name: "dispatch_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "depth_required", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "cached_dispatch_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "debug_info", kind: "message", T: () => DebugInformation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.ResponseMeta
 */
export const ResponseMeta = new ResponseMeta$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DebugInformation$Type extends MessageType<DebugInformation> {
    constructor() {
        super("dispatch.v1.DebugInformation", [
            { no: 1, name: "check", kind: "message", T: () => CheckDebugTrace }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.DebugInformation
 */
export const DebugInformation = new DebugInformation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckDebugTrace$Type extends MessageType<CheckDebugTrace> {
    constructor() {
        super("dispatch.v1.CheckDebugTrace", [
            { no: 1, name: "request", kind: "message", T: () => DispatchCheckRequest },
            { no: 2, name: "resource_relation_type", kind: "enum", T: () => ["dispatch.v1.CheckDebugTrace.RelationType", CheckDebugTrace_RelationType] },
            { no: 3, name: "results", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => ResourceCheckResult } },
            { no: 4, name: "is_cached_result", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "sub_problems", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CheckDebugTrace },
            { no: 6, name: "duration", kind: "message", T: () => Duration },
            { no: 7, name: "trace_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "source_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message dispatch.v1.CheckDebugTrace
 */
export const CheckDebugTrace = new CheckDebugTrace$Type();
/**
 * @generated ServiceType for protobuf service dispatch.v1.DispatchService
 */
export const DispatchService = new ServiceType("dispatch.v1.DispatchService", [
    { name: "DispatchCheck", options: {}, I: DispatchCheckRequest, O: DispatchCheckResponse },
    { name: "DispatchExpand", options: {}, I: DispatchExpandRequest, O: DispatchExpandResponse },
    { name: "DispatchLookupSubjects", serverStreaming: true, options: {}, I: DispatchLookupSubjectsRequest, O: DispatchLookupSubjectsResponse },
    { name: "DispatchLookupResources2", serverStreaming: true, options: {}, I: DispatchLookupResources2Request, O: DispatchLookupResources2Response }
]);

// @generated by protoc-gen-es v2.4.0 with parameter "target=ts"
// @generated from file developer/v1/developer.proto (package developer.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { DebugInformation as DebugInformation$1 } from "../../authzed/api/v1/debug_pb";
import { file_authzed_api_v1_debug } from "../../authzed/api/v1/debug_pb";
import type { ObjectAndRelation, RelationTuple } from "../../core/v1/core_pb";
import { file_core_v1_core } from "../../core/v1/core_pb";
import type { DebugInformation } from "../../dispatch/v1/dispatch_pb";
import { file_dispatch_v1_dispatch } from "../../dispatch/v1/dispatch_pb";
import { file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_validate_validate } from "../../validate/validate_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file developer/v1/developer.proto.
 */
export const file_developer_v1_developer: GenFile = /*@__PURE__*/
  fileDesc("ChxkZXZlbG9wZXIvdjEvZGV2ZWxvcGVyLnByb3RvEgxkZXZlbG9wZXIudjEibgoQRGV2ZWxvcGVyUmVxdWVzdBItCgdjb250ZXh0GAEgASgLMhwuZGV2ZWxvcGVyLnYxLlJlcXVlc3RDb250ZXh0EisKCm9wZXJhdGlvbnMYAiADKAsyFy5kZXZlbG9wZXIudjEuT3BlcmF0aW9uIqEBChFEZXZlbG9wZXJSZXNwb25zZRIWCg5pbnRlcm5hbF9lcnJvchgBIAEoCRI3ChBkZXZlbG9wZXJfZXJyb3JzGAIgASgLMh0uZGV2ZWxvcGVyLnYxLkRldmVsb3BlckVycm9ycxI7ChJvcGVyYXRpb25zX3Jlc3VsdHMYAyABKAsyHy5kZXZlbG9wZXIudjEuT3BlcmF0aW9uc1Jlc3VsdHMiTwoOUmVxdWVzdENvbnRleHQSDgoGc2NoZW1hGAEgASgJEi0KDXJlbGF0aW9uc2hpcHMYAiADKAsyFi5jb3JlLnYxLlJlbGF0aW9uVHVwbGUi7QIKCU9wZXJhdGlvbhJAChBjaGVja19wYXJhbWV0ZXJzGAEgASgLMiYuZGV2ZWxvcGVyLnYxLkNoZWNrT3BlcmF0aW9uUGFyYW1ldGVycxJEChVhc3NlcnRpb25zX3BhcmFtZXRlcnMYAiABKAsyJS5kZXZlbG9wZXIudjEuUnVuQXNzZXJ0aW9uc1BhcmFtZXRlcnMSRAoVdmFsaWRhdGlvbl9wYXJhbWV0ZXJzGAMgASgLMiUuZGV2ZWxvcGVyLnYxLlJ1blZhbGlkYXRpb25QYXJhbWV0ZXJzEkYKGGZvcm1hdF9zY2hlbWFfcGFyYW1ldGVycxgEIAEoCzIkLmRldmVsb3Blci52MS5Gb3JtYXRTY2hlbWFQYXJhbWV0ZXJzEkoKGnNjaGVtYV93YXJuaW5nc19wYXJhbWV0ZXJzGAUgASgLMiYuZGV2ZWxvcGVyLnYxLlNjaGVtYVdhcm5pbmdzUGFyYW1ldGVycyKhAQoRT3BlcmF0aW9uc1Jlc3VsdHMSPQoHcmVzdWx0cxgBIAMoCzIsLmRldmVsb3Blci52MS5PcGVyYXRpb25zUmVzdWx0cy5SZXN1bHRzRW50cnkaTQoMUmVzdWx0c0VudHJ5EgsKA2tleRgBIAEoBBIsCgV2YWx1ZRgCIAEoCzIdLmRldmVsb3Blci52MS5PcGVyYXRpb25SZXN1bHQ6AjgBIswCCg9PcGVyYXRpb25SZXN1bHQSOQoMY2hlY2tfcmVzdWx0GAEgASgLMiMuZGV2ZWxvcGVyLnYxLkNoZWNrT3BlcmF0aW9uc1Jlc3VsdBI8ChFhc3NlcnRpb25zX3Jlc3VsdBgCIAEoCzIhLmRldmVsb3Blci52MS5SdW5Bc3NlcnRpb25zUmVzdWx0EjwKEXZhbGlkYXRpb25fcmVzdWx0GAMgASgLMiEuZGV2ZWxvcGVyLnYxLlJ1blZhbGlkYXRpb25SZXN1bHQSPgoUZm9ybWF0X3NjaGVtYV9yZXN1bHQYBCABKAsyIC5kZXZlbG9wZXIudjEuRm9ybWF0U2NoZW1hUmVzdWx0EkIKFnNjaGVtYV93YXJuaW5nc19yZXN1bHQYBSABKAsyIi5kZXZlbG9wZXIudjEuU2NoZW1hV2FybmluZ3NSZXN1bHQiVgoQRGV2ZWxvcGVyV2FybmluZxIPCgdtZXNzYWdlGAEgASgJEgwKBGxpbmUYAiABKA0SDgoGY29sdW1uGAMgASgNEhMKC3NvdXJjZV9jb2RlGAQgASgJItwFCg5EZXZlbG9wZXJFcnJvchIPCgdtZXNzYWdlGAEgASgJEgwKBGxpbmUYAiABKA0SDgoGY29sdW1uGAMgASgNEjMKBnNvdXJjZRgEIAEoDjIjLmRldmVsb3Blci52MS5EZXZlbG9wZXJFcnJvci5Tb3VyY2USNAoEa2luZBgFIAEoDjImLmRldmVsb3Blci52MS5EZXZlbG9wZXJFcnJvci5FcnJvcktpbmQSDAoEcGF0aBgGIAMoCRIPCgdjb250ZXh0GAcgASgJEj4KF2NoZWNrX2RlYnVnX2luZm9ybWF0aW9uGAggASgLMh0uZGlzcGF0Y2gudjEuRGVidWdJbmZvcm1hdGlvbhJKCiBjaGVja19yZXNvbHZlZF9kZWJ1Z19pbmZvcm1hdGlvbhgJIAEoCzIgLmF1dGh6ZWQuYXBpLnYxLkRlYnVnSW5mb3JtYXRpb24ibwoGU291cmNlEhIKDlVOS05PV05fU09VUkNFEAASCgoGU0NIRU1BEAESEAoMUkVMQVRJT05TSElQEAISEwoPVkFMSURBVElPTl9ZQU1MEAMSDwoLQ0hFQ0tfV0FUQ0gQBBINCglBU1NFUlRJT04QBSKTAgoJRXJyb3JLaW5kEhAKDFVOS05PV05fS0lORBAAEg8KC1BBUlNFX0VSUk9SEAESEAoMU0NIRU1BX0lTU1VFEAISGgoWRFVQTElDQVRFX1JFTEFUSU9OU0hJUBADEiEKHU1JU1NJTkdfRVhQRUNURURfUkVMQVRJT05TSElQEAQSHAoYRVhUUkFfUkVMQVRJT05TSElQX0ZPVU5EEAUSFwoTVU5LTk9XTl9PQkpFQ1RfVFlQRRAGEhQKEFVOS05PV05fUkVMQVRJT04QBxIVChFNQVhJTVVNX1JFQ1VSU0lPThAIEhQKEEFTU0VSVElPTl9GQUlMRUQQCRIYChRJTlZBTElEX1NVQkpFQ1RfVFlQRRAKIkUKD0RldmVsb3BlckVycm9ycxIyCgxpbnB1dF9lcnJvcnMYASADKAsyHC5kZXZlbG9wZXIudjEuRGV2ZWxvcGVyRXJyb3IisAEKGENoZWNrT3BlcmF0aW9uUGFyYW1ldGVycxIsCghyZXNvdXJjZRgBIAEoCzIaLmNvcmUudjEuT2JqZWN0QW5kUmVsYXRpb24SKwoHc3ViamVjdBgCIAEoCzIaLmNvcmUudjEuT2JqZWN0QW5kUmVsYXRpb24SOQoOY2F2ZWF0X2NvbnRleHQYAyABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Qgj6QgWKAQIQACKYAwoVQ2hlY2tPcGVyYXRpb25zUmVzdWx0EkIKCm1lbWJlcnNoaXAYASABKA4yLi5kZXZlbG9wZXIudjEuQ2hlY2tPcGVyYXRpb25zUmVzdWx0Lk1lbWJlcnNoaXASMQoLY2hlY2tfZXJyb3IYAiABKAsyHC5kZXZlbG9wZXIudjEuRGV2ZWxvcGVyRXJyb3ISOAoRZGVidWdfaW5mb3JtYXRpb24YAyABKAsyHS5kaXNwYXRjaC52MS5EZWJ1Z0luZm9ybWF0aW9uEjwKE3BhcnRpYWxfY2F2ZWF0X2luZm8YBCABKAsyHy5kZXZlbG9wZXIudjEuUGFydGlhbENhdmVhdEluZm8SRAoacmVzb2x2ZWRfZGVidWdfaW5mb3JtYXRpb24YBSABKAsyIC5hdXRoemVkLmFwaS52MS5EZWJ1Z0luZm9ybWF0aW9uIkoKCk1lbWJlcnNoaXASCwoHVU5LTk9XThAAEg4KCk5PVF9NRU1CRVIQARIKCgZNRU1CRVIQAhITCg9DQVZFQVRFRF9NRU1CRVIQAyI/ChFQYXJ0aWFsQ2F2ZWF0SW5mbxIqChhtaXNzaW5nX3JlcXVpcmVkX2NvbnRleHQYASADKAlCCPpCBZIBAggBIjIKF1J1bkFzc2VydGlvbnNQYXJhbWV0ZXJzEhcKD2Fzc2VydGlvbnNfeWFtbBgBIAEoCSKBAQoTUnVuQXNzZXJ0aW9uc1Jlc3VsdBIxCgtpbnB1dF9lcnJvchgBIAEoCzIcLmRldmVsb3Blci52MS5EZXZlbG9wZXJFcnJvchI3ChF2YWxpZGF0aW9uX2Vycm9ycxgCIAMoCzIcLmRldmVsb3Blci52MS5EZXZlbG9wZXJFcnJvciIyChdSdW5WYWxpZGF0aW9uUGFyYW1ldGVycxIXCg92YWxpZGF0aW9uX3lhbWwYASABKAkiogEKE1J1blZhbGlkYXRpb25SZXN1bHQSMQoLaW5wdXRfZXJyb3IYASABKAsyHC5kZXZlbG9wZXIudjEuRGV2ZWxvcGVyRXJyb3ISHwoXdXBkYXRlZF92YWxpZGF0aW9uX3lhbWwYAiABKAkSNwoRdmFsaWRhdGlvbl9lcnJvcnMYAyADKAsyHC5kZXZlbG9wZXIudjEuRGV2ZWxvcGVyRXJyb3IiGAoWRm9ybWF0U2NoZW1hUGFyYW1ldGVycyIuChJGb3JtYXRTY2hlbWFSZXN1bHQSGAoQZm9ybWF0dGVkX3NjaGVtYRgBIAEoCSIaChhTY2hlbWFXYXJuaW5nc1BhcmFtZXRlcnMiSAoUU2NoZW1hV2FybmluZ3NSZXN1bHQSMAoId2FybmluZ3MYASADKAsyHi5kZXZlbG9wZXIudjEuRGV2ZWxvcGVyV2FybmluZ0IzWjFnaXRodWIuY29tL2F1dGh6ZWQvc3BpY2VkYi9wa2cvcHJvdG8vZGV2ZWxvcGVyL3YxYgZwcm90bzM", [file_authzed_api_v1_debug, file_core_v1_core, file_dispatch_v1_dispatch, file_google_protobuf_struct, file_validate_validate]);

/**
 * DeveloperRequest is a single request made to the developer platform, containing zero or more
 * operations to run.
 *
 * @generated from message developer.v1.DeveloperRequest
 */
export type DeveloperRequest = Message<"developer.v1.DeveloperRequest"> & {
  /**
   * context is the context for the developer request.
   *
   * @generated from field: developer.v1.RequestContext context = 1;
   */
  context?: RequestContext;

  /**
   * operations are the operations to be run as part of the developer request.
   *
   * @generated from field: repeated developer.v1.Operation operations = 2;
   */
  operations: Operation[];
};

/**
 * Describes the message developer.v1.DeveloperRequest.
 * Use `create(DeveloperRequestSchema)` to create a new message.
 */
export const DeveloperRequestSchema: GenMessage<DeveloperRequest> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 0);

/**
 * DeveloperResponse is the response to a single request made to the developer platform.
 *
 * @generated from message developer.v1.DeveloperResponse
 */
export type DeveloperResponse = Message<"developer.v1.DeveloperResponse"> & {
  /**
   * internal_error is the internal error that occurred when attempting to run this operation, if any.
   *
   * @generated from field: string internal_error = 1;
   */
  internalError: string;

  /**
   * developer_errors are the developer error(s) returned in the operation, if any.
   *
   * @generated from field: developer.v1.DeveloperErrors developer_errors = 2;
   */
  developerErrors?: DeveloperErrors;

  /**
   * operations_results holds the results of the operations, if any and no errors.
   *
   * @generated from field: developer.v1.OperationsResults operations_results = 3;
   */
  operationsResults?: OperationsResults;
};

/**
 * Describes the message developer.v1.DeveloperResponse.
 * Use `create(DeveloperResponseSchema)` to create a new message.
 */
export const DeveloperResponseSchema: GenMessage<DeveloperResponse> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 1);

/**
 * RequestContext is the context for setting up a development package environment for one or more
 * operations.
 *
 * @generated from message developer.v1.RequestContext
 */
export type RequestContext = Message<"developer.v1.RequestContext"> & {
  /**
   * schema is the schema on which to run the developer request.
   *
   * @generated from field: string schema = 1;
   */
  schema: string;

  /**
   * relationships are the test data relationships for the developer request.
   *
   * @generated from field: repeated core.v1.RelationTuple relationships = 2;
   */
  relationships: RelationTuple[];
};

/**
 * Describes the message developer.v1.RequestContext.
 * Use `create(RequestContextSchema)` to create a new message.
 */
export const RequestContextSchema: GenMessage<RequestContext> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 2);

/**
 * Operation is a single operation to be processed by the development package.
 *
 * @generated from message developer.v1.Operation
 */
export type Operation = Message<"developer.v1.Operation"> & {
  /**
   * @generated from field: developer.v1.CheckOperationParameters check_parameters = 1;
   */
  checkParameters?: CheckOperationParameters;

  /**
   * @generated from field: developer.v1.RunAssertionsParameters assertions_parameters = 2;
   */
  assertionsParameters?: RunAssertionsParameters;

  /**
   * @generated from field: developer.v1.RunValidationParameters validation_parameters = 3;
   */
  validationParameters?: RunValidationParameters;

  /**
   * @generated from field: developer.v1.FormatSchemaParameters format_schema_parameters = 4;
   */
  formatSchemaParameters?: FormatSchemaParameters;

  /**
   * @generated from field: developer.v1.SchemaWarningsParameters schema_warnings_parameters = 5;
   */
  schemaWarningsParameters?: SchemaWarningsParameters;
};

/**
 * Describes the message developer.v1.Operation.
 * Use `create(OperationSchema)` to create a new message.
 */
export const OperationSchema: GenMessage<Operation> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 3);

/**
 * OperationsResults holds the results for the operations, indexed by the operation.
 *
 * @generated from message developer.v1.OperationsResults
 */
export type OperationsResults = Message<"developer.v1.OperationsResults"> & {
  /**
   * @generated from field: map<uint64, developer.v1.OperationResult> results = 1;
   */
  results: { [key: string]: OperationResult };
};

/**
 * Describes the message developer.v1.OperationsResults.
 * Use `create(OperationsResultsSchema)` to create a new message.
 */
export const OperationsResultsSchema: GenMessage<OperationsResults> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 4);

/**
 * OperationResult contains the result data given to the callback for an operation.
 *
 * @generated from message developer.v1.OperationResult
 */
export type OperationResult = Message<"developer.v1.OperationResult"> & {
  /**
   * @generated from field: developer.v1.CheckOperationsResult check_result = 1;
   */
  checkResult?: CheckOperationsResult;

  /**
   * @generated from field: developer.v1.RunAssertionsResult assertions_result = 2;
   */
  assertionsResult?: RunAssertionsResult;

  /**
   * @generated from field: developer.v1.RunValidationResult validation_result = 3;
   */
  validationResult?: RunValidationResult;

  /**
   * @generated from field: developer.v1.FormatSchemaResult format_schema_result = 4;
   */
  formatSchemaResult?: FormatSchemaResult;

  /**
   * @generated from field: developer.v1.SchemaWarningsResult schema_warnings_result = 5;
   */
  schemaWarningsResult?: SchemaWarningsResult;
};

/**
 * Describes the message developer.v1.OperationResult.
 * Use `create(OperationResultSchema)` to create a new message.
 */
export const OperationResultSchema: GenMessage<OperationResult> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 5);

/**
 * DeveloperWarning represents a single warning raised by the development package.
 *
 * @generated from message developer.v1.DeveloperWarning
 */
export type DeveloperWarning = Message<"developer.v1.DeveloperWarning"> & {
  /**
   * message is the message for the developer warning.
   *
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * line is the 1-indexed line for the developer warning.
   *
   * @generated from field: uint32 line = 2;
   */
  line: number;

  /**
   * column is the 1-indexed column on the line for the developer warning.
   *
   * @generated from field: uint32 column = 3;
   */
  column: number;

  /**
   * source_code is the source code for the developer warning, if any.
   *
   * @generated from field: string source_code = 4;
   */
  sourceCode: string;
};

/**
 * Describes the message developer.v1.DeveloperWarning.
 * Use `create(DeveloperWarningSchema)` to create a new message.
 */
export const DeveloperWarningSchema: GenMessage<DeveloperWarning> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 6);

/**
 * DeveloperError represents a single error raised by the development package. Unlike an internal
 * error, it represents an issue with the entered information by the calling developer.
 *
 * @generated from message developer.v1.DeveloperError
 */
export type DeveloperError = Message<"developer.v1.DeveloperError"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * line is the 1-indexed line for the developer error.
   *
   * @generated from field: uint32 line = 2;
   */
  line: number;

  /**
   * column is the 1-indexed column on the line for the developer error.
   *
   * @generated from field: uint32 column = 3;
   */
  column: number;

  /**
   * source is the source location of the error.
   *
   * @generated from field: developer.v1.DeveloperError.Source source = 4;
   */
  source: DeveloperError_Source;

  /**
   * @generated from field: developer.v1.DeveloperError.ErrorKind kind = 5;
   */
  kind: DeveloperError_ErrorKind;

  /**
   * @generated from field: repeated string path = 6;
   */
  path: string[];

  /**
   * context holds the context for the error. For schema issues, this will be the
   * name of the object type. For relationship issues, the full relationship string.
   *
   * @generated from field: string context = 7;
   */
  context: string;

  /**
   * debug_information is the debug information for the dispatched check, if this error was raised
   * due to an assertion failure.
   *
   * @generated from field: dispatch.v1.DebugInformation check_debug_information = 8;
   */
  checkDebugInformation?: DebugInformation;

  /**
   * resolved_debug_information is the V1 API debug information for the check, if this error was raised
   * due to an assertion failure.
   *
   * @generated from field: authzed.api.v1.DebugInformation check_resolved_debug_information = 9;
   */
  checkResolvedDebugInformation?: DebugInformation$1;
};

/**
 * Describes the message developer.v1.DeveloperError.
 * Use `create(DeveloperErrorSchema)` to create a new message.
 */
export const DeveloperErrorSchema: GenMessage<DeveloperError> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 7);

/**
 * @generated from enum developer.v1.DeveloperError.Source
 */
export enum DeveloperError_Source {
  /**
   * @generated from enum value: UNKNOWN_SOURCE = 0;
   */
  UNKNOWN_SOURCE = 0,

  /**
   * @generated from enum value: SCHEMA = 1;
   */
  SCHEMA = 1,

  /**
   * @generated from enum value: RELATIONSHIP = 2;
   */
  RELATIONSHIP = 2,

  /**
   * @generated from enum value: VALIDATION_YAML = 3;
   */
  VALIDATION_YAML = 3,

  /**
   * @generated from enum value: CHECK_WATCH = 4;
   */
  CHECK_WATCH = 4,

  /**
   * @generated from enum value: ASSERTION = 5;
   */
  ASSERTION = 5,
}

/**
 * Describes the enum developer.v1.DeveloperError.Source.
 */
export const DeveloperError_SourceSchema: GenEnum<DeveloperError_Source> = /*@__PURE__*/
  enumDesc(file_developer_v1_developer, 7, 0);

/**
 * @generated from enum developer.v1.DeveloperError.ErrorKind
 */
export enum DeveloperError_ErrorKind {
  /**
   * @generated from enum value: UNKNOWN_KIND = 0;
   */
  UNKNOWN_KIND = 0,

  /**
   * @generated from enum value: PARSE_ERROR = 1;
   */
  PARSE_ERROR = 1,

  /**
   * @generated from enum value: SCHEMA_ISSUE = 2;
   */
  SCHEMA_ISSUE = 2,

  /**
   * @generated from enum value: DUPLICATE_RELATIONSHIP = 3;
   */
  DUPLICATE_RELATIONSHIP = 3,

  /**
   * @generated from enum value: MISSING_EXPECTED_RELATIONSHIP = 4;
   */
  MISSING_EXPECTED_RELATIONSHIP = 4,

  /**
   * @generated from enum value: EXTRA_RELATIONSHIP_FOUND = 5;
   */
  EXTRA_RELATIONSHIP_FOUND = 5,

  /**
   * @generated from enum value: UNKNOWN_OBJECT_TYPE = 6;
   */
  UNKNOWN_OBJECT_TYPE = 6,

  /**
   * @generated from enum value: UNKNOWN_RELATION = 7;
   */
  UNKNOWN_RELATION = 7,

  /**
   * @generated from enum value: MAXIMUM_RECURSION = 8;
   */
  MAXIMUM_RECURSION = 8,

  /**
   * @generated from enum value: ASSERTION_FAILED = 9;
   */
  ASSERTION_FAILED = 9,

  /**
   * @generated from enum value: INVALID_SUBJECT_TYPE = 10;
   */
  INVALID_SUBJECT_TYPE = 10,
}

/**
 * Describes the enum developer.v1.DeveloperError.ErrorKind.
 */
export const DeveloperError_ErrorKindSchema: GenEnum<DeveloperError_ErrorKind> = /*@__PURE__*/
  enumDesc(file_developer_v1_developer, 7, 1);

/**
 * DeveloperErrors represents the developer error(s) found after the run has completed.
 *
 * @generated from message developer.v1.DeveloperErrors
 */
export type DeveloperErrors = Message<"developer.v1.DeveloperErrors"> & {
  /**
   * input_errors are those error(s) in the schema, relationships, or assertions inputted by the developer.
   *
   * @generated from field: repeated developer.v1.DeveloperError input_errors = 1;
   */
  inputErrors: DeveloperError[];
};

/**
 * Describes the message developer.v1.DeveloperErrors.
 * Use `create(DeveloperErrorsSchema)` to create a new message.
 */
export const DeveloperErrorsSchema: GenMessage<DeveloperErrors> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 8);

/**
 * CheckOperationParameters are the parameters for a `check` operation.
 *
 * @generated from message developer.v1.CheckOperationParameters
 */
export type CheckOperationParameters = Message<"developer.v1.CheckOperationParameters"> & {
  /**
   * @generated from field: core.v1.ObjectAndRelation resource = 1;
   */
  resource?: ObjectAndRelation;

  /**
   * @generated from field: core.v1.ObjectAndRelation subject = 2;
   */
  subject?: ObjectAndRelation;

  /**
   * * caveat_context consists of any named values that are defined at write time for the caveat expression *
   *
   * @generated from field: google.protobuf.Struct caveat_context = 3;
   */
  caveatContext?: JsonObject;
};

/**
 * Describes the message developer.v1.CheckOperationParameters.
 * Use `create(CheckOperationParametersSchema)` to create a new message.
 */
export const CheckOperationParametersSchema: GenMessage<CheckOperationParameters> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 9);

/**
 * CheckOperationsResult is the result for a `check` operation.
 *
 * @generated from message developer.v1.CheckOperationsResult
 */
export type CheckOperationsResult = Message<"developer.v1.CheckOperationsResult"> & {
  /**
   * @generated from field: developer.v1.CheckOperationsResult.Membership membership = 1;
   */
  membership: CheckOperationsResult_Membership;

  /**
   * check_error is the error raised by the check, if any.
   *
   * @generated from field: developer.v1.DeveloperError check_error = 2;
   */
  checkError?: DeveloperError;

  /**
   * debug_information is the debug information for the check.
   *
   * @generated from field: dispatch.v1.DebugInformation debug_information = 3;
   */
  debugInformation?: DebugInformation;

  /**
   * partial_caveat_info holds information a partial evaluation of a caveat.
   *
   * @generated from field: developer.v1.PartialCaveatInfo partial_caveat_info = 4;
   */
  partialCaveatInfo?: PartialCaveatInfo;

  /**
   * resolved_debug_information is the V1 API debug information for the check.
   *
   * @generated from field: authzed.api.v1.DebugInformation resolved_debug_information = 5;
   */
  resolvedDebugInformation?: DebugInformation$1;
};

/**
 * Describes the message developer.v1.CheckOperationsResult.
 * Use `create(CheckOperationsResultSchema)` to create a new message.
 */
export const CheckOperationsResultSchema: GenMessage<CheckOperationsResult> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 10);

/**
 * @generated from enum developer.v1.CheckOperationsResult.Membership
 */
export enum CheckOperationsResult_Membership {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: NOT_MEMBER = 1;
   */
  NOT_MEMBER = 1,

  /**
   * @generated from enum value: MEMBER = 2;
   */
  MEMBER = 2,

  /**
   * @generated from enum value: CAVEATED_MEMBER = 3;
   */
  CAVEATED_MEMBER = 3,
}

/**
 * Describes the enum developer.v1.CheckOperationsResult.Membership.
 */
export const CheckOperationsResult_MembershipSchema: GenEnum<CheckOperationsResult_Membership> = /*@__PURE__*/
  enumDesc(file_developer_v1_developer, 10, 0);

/**
 * PartialCaveatInfo carries information necessary for the client to take action
 * in the event a response contains a partially evaluated caveat
 *
 * @generated from message developer.v1.PartialCaveatInfo
 */
export type PartialCaveatInfo = Message<"developer.v1.PartialCaveatInfo"> & {
  /**
   * missing_required_context is a list of one or more fields that were missing and prevented caveats
   * from being fully evaluated
   *
   * @generated from field: repeated string missing_required_context = 1;
   */
  missingRequiredContext: string[];
};

/**
 * Describes the message developer.v1.PartialCaveatInfo.
 * Use `create(PartialCaveatInfoSchema)` to create a new message.
 */
export const PartialCaveatInfoSchema: GenMessage<PartialCaveatInfo> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 11);

/**
 * RunAssertionsParameters are the parameters for a `runAssertions` operation.
 *
 * @generated from message developer.v1.RunAssertionsParameters
 */
export type RunAssertionsParameters = Message<"developer.v1.RunAssertionsParameters"> & {
  /**
   * assertions_yaml are the assertions, in YAML form, to be run.
   *
   * @generated from field: string assertions_yaml = 1;
   */
  assertionsYaml: string;
};

/**
 * Describes the message developer.v1.RunAssertionsParameters.
 * Use `create(RunAssertionsParametersSchema)` to create a new message.
 */
export const RunAssertionsParametersSchema: GenMessage<RunAssertionsParameters> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 12);

/**
 * RunAssertionsResult is the result for a `runAssertions` operation.
 *
 * @generated from message developer.v1.RunAssertionsResult
 */
export type RunAssertionsResult = Message<"developer.v1.RunAssertionsResult"> & {
  /**
   * input_error is an error in the given YAML.
   *
   * @generated from field: developer.v1.DeveloperError input_error = 1;
   */
  inputError?: DeveloperError;

  /**
   * validation_errors are the validation errors which occurred, if any.
   *
   * @generated from field: repeated developer.v1.DeveloperError validation_errors = 2;
   */
  validationErrors: DeveloperError[];
};

/**
 * Describes the message developer.v1.RunAssertionsResult.
 * Use `create(RunAssertionsResultSchema)` to create a new message.
 */
export const RunAssertionsResultSchema: GenMessage<RunAssertionsResult> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 13);

/**
 * RunValidationParameters are the parameters for a `runValidation` operation.
 *
 * @generated from message developer.v1.RunValidationParameters
 */
export type RunValidationParameters = Message<"developer.v1.RunValidationParameters"> & {
  /**
   * validation_yaml is the expected relations validation, in YAML form, to be run.
   *
   * @generated from field: string validation_yaml = 1;
   */
  validationYaml: string;
};

/**
 * Describes the message developer.v1.RunValidationParameters.
 * Use `create(RunValidationParametersSchema)` to create a new message.
 */
export const RunValidationParametersSchema: GenMessage<RunValidationParameters> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 14);

/**
 * RunValidationResult is the result for a `runValidation` operation.
 *
 * @generated from message developer.v1.RunValidationResult
 */
export type RunValidationResult = Message<"developer.v1.RunValidationResult"> & {
  /**
   * input_error is an error in the given YAML.
   *
   * @generated from field: developer.v1.DeveloperError input_error = 1;
   */
  inputError?: DeveloperError;

  /**
   * updated_validation_yaml contains the generated and updated validation YAML for the expected
   * relations tab.
   *
   * @generated from field: string updated_validation_yaml = 2;
   */
  updatedValidationYaml: string;

  /**
   * validation_errors are the validation errors which occurred, if any.
   *
   * @generated from field: repeated developer.v1.DeveloperError validation_errors = 3;
   */
  validationErrors: DeveloperError[];
};

/**
 * Describes the message developer.v1.RunValidationResult.
 * Use `create(RunValidationResultSchema)` to create a new message.
 */
export const RunValidationResultSchema: GenMessage<RunValidationResult> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 15);

/**
 * FormatSchemaParameters are the parameters for a `formatSchema` operation.
 *
 * empty
 *
 * @generated from message developer.v1.FormatSchemaParameters
 */
export type FormatSchemaParameters = Message<"developer.v1.FormatSchemaParameters"> & {
};

/**
 * Describes the message developer.v1.FormatSchemaParameters.
 * Use `create(FormatSchemaParametersSchema)` to create a new message.
 */
export const FormatSchemaParametersSchema: GenMessage<FormatSchemaParameters> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 16);

/**
 * FormatSchemaResult is the result of the `formatSchema` operation.
 *
 * @generated from message developer.v1.FormatSchemaResult
 */
export type FormatSchemaResult = Message<"developer.v1.FormatSchemaResult"> & {
  /**
   * @generated from field: string formatted_schema = 1;
   */
  formattedSchema: string;
};

/**
 * Describes the message developer.v1.FormatSchemaResult.
 * Use `create(FormatSchemaResultSchema)` to create a new message.
 */
export const FormatSchemaResultSchema: GenMessage<FormatSchemaResult> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 17);

/**
 * SchemaWarningsParameters are the parameters for a `schemaWarnings` operation.
 *
 * empty
 *
 * @generated from message developer.v1.SchemaWarningsParameters
 */
export type SchemaWarningsParameters = Message<"developer.v1.SchemaWarningsParameters"> & {
};

/**
 * Describes the message developer.v1.SchemaWarningsParameters.
 * Use `create(SchemaWarningsParametersSchema)` to create a new message.
 */
export const SchemaWarningsParametersSchema: GenMessage<SchemaWarningsParameters> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 18);

/**
 * SchemaWarningsResult is the result of the `schemaWarnings` operation.
 *
 * @generated from message developer.v1.SchemaWarningsResult
 */
export type SchemaWarningsResult = Message<"developer.v1.SchemaWarningsResult"> & {
  /**
   * @generated from field: repeated developer.v1.DeveloperWarning warnings = 1;
   */
  warnings: DeveloperWarning[];
};

/**
 * Describes the message developer.v1.SchemaWarningsResult.
 * Use `create(SchemaWarningsResultSchema)` to create a new message.
 */
export const SchemaWarningsResultSchema: GenMessage<SchemaWarningsResult> = /*@__PURE__*/
  messageDesc(file_developer_v1_developer, 19);


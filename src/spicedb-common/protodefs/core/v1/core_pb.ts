// @generated by protoc-gen-es v2.4.0 with parameter "target=ts"
// @generated from file core/v1/core.proto (package core.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_validate_validate } from "../../validate/validate_pb";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file core/v1/core.proto.
 */
export const file_core_v1_core: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_any, file_google_protobuf_struct, file_google_protobuf_timestamp, file_validate_validate]);

/**
 * @generated from message core.v1.RelationTuple
 */
export type RelationTuple = Message<"core.v1.RelationTuple"> & {
  /**
   * * resource_and_relation is the resource for the tuple 
   *
   * @generated from field: core.v1.ObjectAndRelation resource_and_relation = 1;
   */
  resourceAndRelation?: ObjectAndRelation;

  /**
   * * subject is the subject for the tuple 
   *
   * @generated from field: core.v1.ObjectAndRelation subject = 2;
   */
  subject?: ObjectAndRelation;

  /**
   * * caveat is a reference to a the caveat that must be enforced over the tuple *
   *
   * @generated from field: core.v1.ContextualizedCaveat caveat = 3;
   */
  caveat?: ContextualizedCaveat;

  /**
   * * integrity holds (optional) information about the integrity of the tuple 
   *
   * @generated from field: core.v1.RelationshipIntegrity integrity = 4;
   */
  integrity?: RelationshipIntegrity;

  /**
   * * optional_expiration_time is the (optional) time at which the tuple expires 
   *
   * @generated from field: google.protobuf.Timestamp optional_expiration_time = 5;
   */
  optionalExpirationTime?: Timestamp;
};

/**
 * Describes the message core.v1.RelationTuple.
 * Use `create(RelationTupleSchema)` to create a new message.
 */
export const RelationTupleSchema: GenMessage<RelationTuple> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 0);

/**
 * @generated from message core.v1.RelationshipIntegrity
 */
export type RelationshipIntegrity = Message<"core.v1.RelationshipIntegrity"> & {
  /**
   * * key_id is the key ID used to hash the tuple 
   *
   * @generated from field: string key_id = 1;
   */
  keyId: string;

  /**
   * * hash is the hash of the tuple 
   *
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * * hashed_at is the timestamp when the tuple was hashed 
   *
   * @generated from field: google.protobuf.Timestamp hashed_at = 3;
   */
  hashedAt?: Timestamp;
};

/**
 * Describes the message core.v1.RelationshipIntegrity.
 * Use `create(RelationshipIntegritySchema)` to create a new message.
 */
export const RelationshipIntegritySchema: GenMessage<RelationshipIntegrity> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 1);

/**
 * *
 * ContextualizedCaveat represents a reference to a caveat used to by caveated tuples.
 * The context are key-value pairs that will be injected at evaluation time.
 *
 * @generated from message core.v1.ContextualizedCaveat
 */
export type ContextualizedCaveat = Message<"core.v1.ContextualizedCaveat"> & {
  /**
   * * caveat_name is the name used in the schema for a stored caveat *
   *
   * @generated from field: string caveat_name = 1;
   */
  caveatName: string;

  /**
   * * context are arguments used as input during caveat evaluation with a predefined value *
   *
   * @generated from field: google.protobuf.Struct context = 2;
   */
  context?: JsonObject;
};

/**
 * Describes the message core.v1.ContextualizedCaveat.
 * Use `create(ContextualizedCaveatSchema)` to create a new message.
 */
export const ContextualizedCaveatSchema: GenMessage<ContextualizedCaveat> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 2);

/**
 * @generated from message core.v1.CaveatDefinition
 */
export type CaveatDefinition = Message<"core.v1.CaveatDefinition"> & {
  /**
   * * name represents the globally-unique identifier of the caveat *
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * * serialized_expression is the byte representation of a caveat's logic 
   *
   * @generated from field: bytes serialized_expression = 2;
   */
  serializedExpression: Uint8Array;

  /**
   * * parameters_and_types is a map from parameter name to its type 
   *
   * @generated from field: map<string, core.v1.CaveatTypeReference> parameter_types = 3;
   */
  parameterTypes: { [key: string]: CaveatTypeReference };

  /**
   * * metadata contains compiler metadata from schemas compiled into caveats 
   *
   * @generated from field: core.v1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  /**
   * * source_position contains the position of the caveat in the source schema, if any 
   *
   * @generated from field: core.v1.SourcePosition source_position = 5;
   */
  sourcePosition?: SourcePosition;
};

/**
 * Describes the message core.v1.CaveatDefinition.
 * Use `create(CaveatDefinitionSchema)` to create a new message.
 */
export const CaveatDefinitionSchema: GenMessage<CaveatDefinition> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 3);

/**
 * @generated from message core.v1.CaveatTypeReference
 */
export type CaveatTypeReference = Message<"core.v1.CaveatTypeReference"> & {
  /**
   * @generated from field: string type_name = 1;
   */
  typeName: string;

  /**
   * @generated from field: repeated core.v1.CaveatTypeReference child_types = 2;
   */
  childTypes: CaveatTypeReference[];
};

/**
 * Describes the message core.v1.CaveatTypeReference.
 * Use `create(CaveatTypeReferenceSchema)` to create a new message.
 */
export const CaveatTypeReferenceSchema: GenMessage<CaveatTypeReference> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 4);

/**
 * @generated from message core.v1.ObjectAndRelation
 */
export type ObjectAndRelation = Message<"core.v1.ObjectAndRelation"> & {
  /**
   * * namespace is the full namespace path for the referenced object 
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * * object_id is the unique ID for the object within the namespace 
   *
   * @generated from field: string object_id = 2;
   */
  objectId: string;

  /**
   * * relation is the name of the referenced relation or permission under the namespace 
   *
   * @generated from field: string relation = 3;
   */
  relation: string;
};

/**
 * Describes the message core.v1.ObjectAndRelation.
 * Use `create(ObjectAndRelationSchema)` to create a new message.
 */
export const ObjectAndRelationSchema: GenMessage<ObjectAndRelation> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 5);

/**
 * @generated from message core.v1.RelationReference
 */
export type RelationReference = Message<"core.v1.RelationReference"> & {
  /**
   * * namespace is the full namespace path 
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * * relation is the name of the referenced relation or permission under the namespace 
   *
   * @generated from field: string relation = 3;
   */
  relation: string;
};

/**
 * Describes the message core.v1.RelationReference.
 * Use `create(RelationReferenceSchema)` to create a new message.
 */
export const RelationReferenceSchema: GenMessage<RelationReference> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 6);

/**
 * @generated from message core.v1.Zookie
 */
export type Zookie = Message<"core.v1.Zookie"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message core.v1.Zookie.
 * Use `create(ZookieSchema)` to create a new message.
 */
export const ZookieSchema: GenMessage<Zookie> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 7);

/**
 * @generated from message core.v1.RelationTupleUpdate
 */
export type RelationTupleUpdate = Message<"core.v1.RelationTupleUpdate"> & {
  /**
   * @generated from field: core.v1.RelationTupleUpdate.Operation operation = 1;
   */
  operation: RelationTupleUpdate_Operation;

  /**
   * @generated from field: core.v1.RelationTuple tuple = 2;
   */
  tuple?: RelationTuple;
};

/**
 * Describes the message core.v1.RelationTupleUpdate.
 * Use `create(RelationTupleUpdateSchema)` to create a new message.
 */
export const RelationTupleUpdateSchema: GenMessage<RelationTupleUpdate> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 8);

/**
 * @generated from enum core.v1.RelationTupleUpdate.Operation
 */
export enum RelationTupleUpdate_Operation {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: CREATE = 1;
   */
  CREATE = 1,

  /**
   * @generated from enum value: TOUCH = 2;
   */
  TOUCH = 2,

  /**
   * @generated from enum value: DELETE = 3;
   */
  DELETE = 3,
}

/**
 * Describes the enum core.v1.RelationTupleUpdate.Operation.
 */
export const RelationTupleUpdate_OperationSchema: GenEnum<RelationTupleUpdate_Operation> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 8, 0);

/**
 * @generated from message core.v1.RelationTupleTreeNode
 */
export type RelationTupleTreeNode = Message<"core.v1.RelationTupleTreeNode"> & {
  /**
   * @generated from oneof core.v1.RelationTupleTreeNode.node_type
   */
  nodeType: {
    /**
     * @generated from field: core.v1.SetOperationUserset intermediate_node = 1;
     */
    value: SetOperationUserset;
    case: "intermediateNode";
  } | {
    /**
     * @generated from field: core.v1.DirectSubjects leaf_node = 2;
     */
    value: DirectSubjects;
    case: "leafNode";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: core.v1.ObjectAndRelation expanded = 3;
   */
  expanded?: ObjectAndRelation;

  /**
   * @generated from field: core.v1.CaveatExpression caveat_expression = 4;
   */
  caveatExpression?: CaveatExpression;
};

/**
 * Describes the message core.v1.RelationTupleTreeNode.
 * Use `create(RelationTupleTreeNodeSchema)` to create a new message.
 */
export const RelationTupleTreeNodeSchema: GenMessage<RelationTupleTreeNode> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 9);

/**
 * @generated from message core.v1.SetOperationUserset
 */
export type SetOperationUserset = Message<"core.v1.SetOperationUserset"> & {
  /**
   * @generated from field: core.v1.SetOperationUserset.Operation operation = 1;
   */
  operation: SetOperationUserset_Operation;

  /**
   * @generated from field: repeated core.v1.RelationTupleTreeNode child_nodes = 2;
   */
  childNodes: RelationTupleTreeNode[];
};

/**
 * Describes the message core.v1.SetOperationUserset.
 * Use `create(SetOperationUsersetSchema)` to create a new message.
 */
export const SetOperationUsersetSchema: GenMessage<SetOperationUserset> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 10);

/**
 * @generated from enum core.v1.SetOperationUserset.Operation
 */
export enum SetOperationUserset_Operation {
  /**
   * @generated from enum value: INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: UNION = 1;
   */
  UNION = 1,

  /**
   * @generated from enum value: INTERSECTION = 2;
   */
  INTERSECTION = 2,

  /**
   * @generated from enum value: EXCLUSION = 3;
   */
  EXCLUSION = 3,
}

/**
 * Describes the enum core.v1.SetOperationUserset.Operation.
 */
export const SetOperationUserset_OperationSchema: GenEnum<SetOperationUserset_Operation> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 10, 0);

/**
 * @generated from message core.v1.DirectSubject
 */
export type DirectSubject = Message<"core.v1.DirectSubject"> & {
  /**
   * @generated from field: core.v1.ObjectAndRelation subject = 1;
   */
  subject?: ObjectAndRelation;

  /**
   * @generated from field: core.v1.CaveatExpression caveat_expression = 2;
   */
  caveatExpression?: CaveatExpression;
};

/**
 * Describes the message core.v1.DirectSubject.
 * Use `create(DirectSubjectSchema)` to create a new message.
 */
export const DirectSubjectSchema: GenMessage<DirectSubject> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 11);

/**
 * @generated from message core.v1.DirectSubjects
 */
export type DirectSubjects = Message<"core.v1.DirectSubjects"> & {
  /**
   * @generated from field: repeated core.v1.DirectSubject subjects = 1;
   */
  subjects: DirectSubject[];
};

/**
 * Describes the message core.v1.DirectSubjects.
 * Use `create(DirectSubjectsSchema)` to create a new message.
 */
export const DirectSubjectsSchema: GenMessage<DirectSubjects> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 12);

/**
 * *
 * Metadata is compiler metadata added to namespace definitions, such as doc comments and
 * relation kinds.
 *
 * @generated from message core.v1.Metadata
 */
export type Metadata = Message<"core.v1.Metadata"> & {
  /**
   * @generated from field: repeated google.protobuf.Any metadata_message = 1;
   */
  metadataMessage: Any[];
};

/**
 * Describes the message core.v1.Metadata.
 * Use `create(MetadataSchema)` to create a new message.
 */
export const MetadataSchema: GenMessage<Metadata> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 13);

/**
 * *
 * NamespaceDefinition represents a single definition of an object type
 *
 * @generated from message core.v1.NamespaceDefinition
 */
export type NamespaceDefinition = Message<"core.v1.NamespaceDefinition"> & {
  /**
   * * name is the unique for the namespace, including prefixes (which are optional) 
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * * relation contains the relations and permissions defined in the namespace 
   *
   * @generated from field: repeated core.v1.Relation relation = 2;
   */
  relation: Relation[];

  /**
   * * metadata contains compiler metadata from schemas compiled into namespaces 
   *
   * @generated from field: core.v1.Metadata metadata = 3;
   */
  metadata?: Metadata;

  /**
   * * source_position contains the position of the namespace in the source schema, if any 
   *
   * @generated from field: core.v1.SourcePosition source_position = 4;
   */
  sourcePosition?: SourcePosition;
};

/**
 * Describes the message core.v1.NamespaceDefinition.
 * Use `create(NamespaceDefinitionSchema)` to create a new message.
 */
export const NamespaceDefinitionSchema: GenMessage<NamespaceDefinition> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 14);

/**
 * *
 * Relation represents the definition of a relation or permission under a namespace.
 *
 * @generated from message core.v1.Relation
 */
export type Relation = Message<"core.v1.Relation"> & {
  /**
   * * name is the full name for the relation or permission 
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * * userset_rewrite, if specified, is the rewrite for computing the value of the permission. 
   *
   * @generated from field: core.v1.UsersetRewrite userset_rewrite = 2;
   */
  usersetRewrite?: UsersetRewrite;

  /**
   * *
   * type_information, if specified, is the list of allowed object types that can appear in this
   * relation
   *
   * @generated from field: core.v1.TypeInformation type_information = 3;
   */
  typeInformation?: TypeInformation;

  /**
   * * metadata contains compiler metadata from schemas compiled into namespaces 
   *
   * @generated from field: core.v1.Metadata metadata = 4;
   */
  metadata?: Metadata;

  /**
   * * source_position contains the position of the relation in the source schema, if any 
   *
   * @generated from field: core.v1.SourcePosition source_position = 5;
   */
  sourcePosition?: SourcePosition;

  /**
   * @generated from field: string aliasing_relation = 6;
   */
  aliasingRelation: string;

  /**
   * @generated from field: string canonical_cache_key = 7;
   */
  canonicalCacheKey: string;
};

/**
 * Describes the message core.v1.Relation.
 * Use `create(RelationSchema)` to create a new message.
 */
export const RelationSchema: GenMessage<Relation> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 15);

/**
 * *
 * ReachabilityGraph is a serialized form of a reachability graph, representing how a relation can
 * be reached from one or more subject types.
 *
 * It defines a "reverse" data flow graph, starting at a subject type, and providing all the
 * entrypoints where that subject type can be found leading to the decorated relation.
 *
 * For example, given the schema:
 * ```
 *   definition user {}
 *
 *   definition organization {
 *     relation admin: user
 *   }
 *
 *   definition resource {
 *     relation org: organization
 *     relation viewer: user
 *     relation owner: user
 *     permission view = viewer + owner + org->admin
 *   }
 * ```
 *
 * The reachability graph for `viewer` and the other relations will have entrypoints for each
 * subject type found for those relations.
 *
 * The full reachability graph for the `view` relation will have three entrypoints, representing:
 *   1) resource#viewer (computed_userset)
 *   2) resource#owner  (computed_userset)
 *   3) organization#admin (tupleset_to_userset)
 *
 * @generated from message core.v1.ReachabilityGraph
 */
export type ReachabilityGraph = Message<"core.v1.ReachabilityGraph"> & {
  /**
   * *
   * entrypoints_by_subject_type provides all entrypoints by subject *type*, representing wildcards.
   * The keys of the map are the full path(s) for the namespace(s) referenced by reachable wildcards
   *
   * @generated from field: map<string, core.v1.ReachabilityEntrypoints> entrypoints_by_subject_type = 1;
   */
  entrypointsBySubjectType: { [key: string]: ReachabilityEntrypoints };

  /**
   * *
   * entrypoints_by_subject_relation provides all entrypoints by subject type+relation.
   * The keys of the map are of the form `namespace_path#relation_name`
   *
   * @generated from field: map<string, core.v1.ReachabilityEntrypoints> entrypoints_by_subject_relation = 2;
   */
  entrypointsBySubjectRelation: { [key: string]: ReachabilityEntrypoints };
};

/**
 * Describes the message core.v1.ReachabilityGraph.
 * Use `create(ReachabilityGraphSchema)` to create a new message.
 */
export const ReachabilityGraphSchema: GenMessage<ReachabilityGraph> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 16);

/**
 * *
 * ReachabilityEntrypoints represents all the entrypoints for a specific subject type or subject
 * relation into the reachability graph for a particular target relation.
 *
 * @generated from message core.v1.ReachabilityEntrypoints
 */
export type ReachabilityEntrypoints = Message<"core.v1.ReachabilityEntrypoints"> & {
  /**
   * *
   * entrypoints are the entrypoints found.
   *
   * @generated from field: repeated core.v1.ReachabilityEntrypoint entrypoints = 1;
   */
  entrypoints: ReachabilityEntrypoint[];

  /**
   * *
   * subject_type, if specified, is the type of subjects to which the entrypoint(s) apply. A
   * subject type is only set for wildcards.
   *
   * @generated from field: string subject_type = 2;
   */
  subjectType: string;

  /**
   * *
   * subject_relation, if specified, is the type and relation of subjects to which the
   * entrypoint(s) apply.
   *
   * @generated from field: core.v1.RelationReference subject_relation = 3;
   */
  subjectRelation?: RelationReference;
};

/**
 * Describes the message core.v1.ReachabilityEntrypoints.
 * Use `create(ReachabilityEntrypointsSchema)` to create a new message.
 */
export const ReachabilityEntrypointsSchema: GenMessage<ReachabilityEntrypoints> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 17);

/**
 * *
 * ReachabilityEntrypoint represents a single entrypoint for a specific subject type or subject
 * relation into the reachability graph for a particular target relation.
 *
 * @generated from message core.v1.ReachabilityEntrypoint
 */
export type ReachabilityEntrypoint = Message<"core.v1.ReachabilityEntrypoint"> & {
  /**
   * *
   * kind is the kind of the entrypoint.
   *
   * @generated from field: core.v1.ReachabilityEntrypoint.ReachabilityEntrypointKind kind = 1;
   */
  kind: ReachabilityEntrypoint_ReachabilityEntrypointKind;

  /**
   * *
   * target_relation is the relation on which the entrypoint exists.
   *
   * @generated from field: core.v1.RelationReference target_relation = 2;
   */
  targetRelation?: RelationReference;

  /**
   * *
   * result_status contains the status of objects found for this entrypoint as direct results for
   * the parent relation/permission.
   *
   * @generated from field: core.v1.ReachabilityEntrypoint.EntrypointResultStatus result_status = 4;
   */
  resultStatus: ReachabilityEntrypoint_EntrypointResultStatus;

  /**
   * *
   * tupleset_relation is the name of the tupleset relation on the TupleToUserset this entrypoint
   * represents, if applicable.
   *
   * @generated from field: string tupleset_relation = 5;
   */
  tuplesetRelation: string;

  /**
   * *
   * computed_userset_relation is the name of the computed userset relation on the ComputedUserset
   * this entrypoint represents, if applicable.
   *
   * @generated from field: string computed_userset_relation = 6;
   */
  computedUsersetRelation: string;
};

/**
 * Describes the message core.v1.ReachabilityEntrypoint.
 * Use `create(ReachabilityEntrypointSchema)` to create a new message.
 */
export const ReachabilityEntrypointSchema: GenMessage<ReachabilityEntrypoint> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 18);

/**
 * @generated from enum core.v1.ReachabilityEntrypoint.ReachabilityEntrypointKind
 */
export enum ReachabilityEntrypoint_ReachabilityEntrypointKind {
  /**
   * *
   * RELATION_ENTRYPOINT indicates an entrypoint where the subject object can be directly
   * found for a relationship.
   *
   * @generated from enum value: RELATION_ENTRYPOINT = 0;
   */
  RELATION_ENTRYPOINT = 0,

  /**
   * *
   * COMPUTED_USERSET_ENTRYPOINT indicates an entrypoint where the subject's relation is
   * "rewritten" via a `computed_userset` to the target permission's operation node.
   *
   * @generated from enum value: COMPUTED_USERSET_ENTRYPOINT = 1;
   */
  COMPUTED_USERSET_ENTRYPOINT = 1,

  /**
   * *
   * TUPLESET_TO_USERSET_ENTRYPOINT indicates an entrypoint where the subject's relation is
   * walked via a `tupleset_to_userset` in the target permission's operation node.
   *
   * @generated from enum value: TUPLESET_TO_USERSET_ENTRYPOINT = 2;
   */
  TUPLESET_TO_USERSET_ENTRYPOINT = 2,
}

/**
 * Describes the enum core.v1.ReachabilityEntrypoint.ReachabilityEntrypointKind.
 */
export const ReachabilityEntrypoint_ReachabilityEntrypointKindSchema: GenEnum<ReachabilityEntrypoint_ReachabilityEntrypointKind> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 18, 0);

/**
 * @generated from enum core.v1.ReachabilityEntrypoint.EntrypointResultStatus
 */
export enum ReachabilityEntrypoint_EntrypointResultStatus {
  /**
   * *
   * REACHABLE_CONDITIONAL_RESULT indicates that the entrypoint is under one or more intersections
   * or exclusion operations, indicating that any reachable object *may* be a result, conditional
   * on the parent non-union operation(s).
   *
   * @generated from enum value: REACHABLE_CONDITIONAL_RESULT = 0;
   */
  REACHABLE_CONDITIONAL_RESULT = 0,

  /**
   * *
   * DIRECT_OPERATION_RESULT indicates that the entrypoint exists solely under zero or more
   * union operations, making any reachable object also a *result* of the relation or permission.
   *
   * @generated from enum value: DIRECT_OPERATION_RESULT = 1;
   */
  DIRECT_OPERATION_RESULT = 1,
}

/**
 * Describes the enum core.v1.ReachabilityEntrypoint.EntrypointResultStatus.
 */
export const ReachabilityEntrypoint_EntrypointResultStatusSchema: GenEnum<ReachabilityEntrypoint_EntrypointResultStatus> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 18, 1);

/**
 * *
 * TypeInformation defines the allowed types for a relation.
 *
 * @generated from message core.v1.TypeInformation
 */
export type TypeInformation = Message<"core.v1.TypeInformation"> & {
  /**
   * *
   * allowed_direct_relations are those relation types allowed to be placed into a relation,
   * e.g. the types of subjects allowed when a relationship is written to the relation
   *
   * @generated from field: repeated core.v1.AllowedRelation allowed_direct_relations = 1;
   */
  allowedDirectRelations: AllowedRelation[];
};

/**
 * Describes the message core.v1.TypeInformation.
 * Use `create(TypeInformationSchema)` to create a new message.
 */
export const TypeInformationSchema: GenMessage<TypeInformation> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 19);

/**
 * *
 * AllowedRelation is an allowed type of a relation when used as a subject.
 *
 * @generated from message core.v1.AllowedRelation
 */
export type AllowedRelation = Message<"core.v1.AllowedRelation"> & {
  /**
   * * namespace is the full namespace path of the allowed object type 
   *
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * *
   * relation_or_wildcard indicates the relation for the objects, or a wildcard.
   *
   * @generated from oneof core.v1.AllowedRelation.relation_or_wildcard
   */
  relationOrWildcard: {
    /**
     * @generated from field: string relation = 3;
     */
    value: string;
    case: "relation";
  } | {
    /**
     * @generated from field: core.v1.AllowedRelation.PublicWildcard public_wildcard = 4;
     */
    value: AllowedRelation_PublicWildcard;
    case: "publicWildcard";
  } | { case: undefined; value?: undefined };

  /**
   * * source_position contains the position of the type in the source schema, if any 
   *
   * @generated from field: core.v1.SourcePosition source_position = 5;
   */
  sourcePosition?: SourcePosition;

  /**
   * *
   * required_caveat defines the required caveat on this relation.
   *
   * @generated from field: core.v1.AllowedCaveat required_caveat = 6;
   */
  requiredCaveat?: AllowedCaveat;

  /**
   * *
   * required_expiration defines the required expiration on this relation.
   *
   * @generated from field: core.v1.ExpirationTrait required_expiration = 7;
   */
  requiredExpiration?: ExpirationTrait;
};

/**
 * Describes the message core.v1.AllowedRelation.
 * Use `create(AllowedRelationSchema)` to create a new message.
 */
export const AllowedRelationSchema: GenMessage<AllowedRelation> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 20);

/**
 * @generated from message core.v1.AllowedRelation.PublicWildcard
 */
export type AllowedRelation_PublicWildcard = Message<"core.v1.AllowedRelation.PublicWildcard"> & {
};

/**
 * Describes the message core.v1.AllowedRelation.PublicWildcard.
 * Use `create(AllowedRelation_PublicWildcardSchema)` to create a new message.
 */
export const AllowedRelation_PublicWildcardSchema: GenMessage<AllowedRelation_PublicWildcard> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 20, 0);

/**
 * *
 * ExpirationTrait is an expiration trait of a relation.
 *
 * @generated from message core.v1.ExpirationTrait
 */
export type ExpirationTrait = Message<"core.v1.ExpirationTrait"> & {
};

/**
 * Describes the message core.v1.ExpirationTrait.
 * Use `create(ExpirationTraitSchema)` to create a new message.
 */
export const ExpirationTraitSchema: GenMessage<ExpirationTrait> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 21);

/**
 * *
 * AllowedCaveat is an allowed caveat of a relation.
 *
 * @generated from message core.v1.AllowedCaveat
 */
export type AllowedCaveat = Message<"core.v1.AllowedCaveat"> & {
  /**
   * *
   * caveat_name is the name of the allowed caveat.
   *
   * @generated from field: string caveat_name = 1;
   */
  caveatName: string;
};

/**
 * Describes the message core.v1.AllowedCaveat.
 * Use `create(AllowedCaveatSchema)` to create a new message.
 */
export const AllowedCaveatSchema: GenMessage<AllowedCaveat> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 22);

/**
 * @generated from message core.v1.UsersetRewrite
 */
export type UsersetRewrite = Message<"core.v1.UsersetRewrite"> & {
  /**
   * @generated from oneof core.v1.UsersetRewrite.rewrite_operation
   */
  rewriteOperation: {
    /**
     * @generated from field: core.v1.SetOperation union = 1;
     */
    value: SetOperation;
    case: "union";
  } | {
    /**
     * @generated from field: core.v1.SetOperation intersection = 2;
     */
    value: SetOperation;
    case: "intersection";
  } | {
    /**
     * @generated from field: core.v1.SetOperation exclusion = 3;
     */
    value: SetOperation;
    case: "exclusion";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: core.v1.SourcePosition source_position = 4;
   */
  sourcePosition?: SourcePosition;
};

/**
 * Describes the message core.v1.UsersetRewrite.
 * Use `create(UsersetRewriteSchema)` to create a new message.
 */
export const UsersetRewriteSchema: GenMessage<UsersetRewrite> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 23);

/**
 * @generated from message core.v1.SetOperation
 */
export type SetOperation = Message<"core.v1.SetOperation"> & {
  /**
   * @generated from field: repeated core.v1.SetOperation.Child child = 1;
   */
  child: SetOperation_Child[];
};

/**
 * Describes the message core.v1.SetOperation.
 * Use `create(SetOperationSchema)` to create a new message.
 */
export const SetOperationSchema: GenMessage<SetOperation> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 24);

/**
 * @generated from message core.v1.SetOperation.Child
 */
export type SetOperation_Child = Message<"core.v1.SetOperation.Child"> & {
  /**
   * @generated from oneof core.v1.SetOperation.Child.child_type
   */
  childType: {
    /**
     * @generated from field: core.v1.SetOperation.Child.This _this = 1;
     */
    value: SetOperation_Child_This;
    case: "This";
  } | {
    /**
     * @generated from field: core.v1.ComputedUserset computed_userset = 2;
     */
    value: ComputedUserset;
    case: "computedUserset";
  } | {
    /**
     * @generated from field: core.v1.TupleToUserset tuple_to_userset = 3;
     */
    value: TupleToUserset;
    case: "tupleToUserset";
  } | {
    /**
     * @generated from field: core.v1.UsersetRewrite userset_rewrite = 4;
     */
    value: UsersetRewrite;
    case: "usersetRewrite";
  } | {
    /**
     * @generated from field: core.v1.FunctionedTupleToUserset functioned_tuple_to_userset = 8;
     */
    value: FunctionedTupleToUserset;
    case: "functionedTupleToUserset";
  } | {
    /**
     * @generated from field: core.v1.SetOperation.Child.Nil _nil = 6;
     */
    value: SetOperation_Child_Nil;
    case: "Nil";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: core.v1.SourcePosition source_position = 5;
   */
  sourcePosition?: SourcePosition;

  /**
   * *
   * operation_path (if specified) is the *unique* ID for the set operation in the permission
   * definition. It is a heirarchy representing the position of the operation under its parent
   * operation. For example, the operation path of an operation which is the third child of the
   * fourth top-level operation, will be `3,2`.
   *
   * @generated from field: repeated uint32 operation_path = 7;
   */
  operationPath: number[];
};

/**
 * Describes the message core.v1.SetOperation.Child.
 * Use `create(SetOperation_ChildSchema)` to create a new message.
 */
export const SetOperation_ChildSchema: GenMessage<SetOperation_Child> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 24, 0);

/**
 * @generated from message core.v1.SetOperation.Child.This
 */
export type SetOperation_Child_This = Message<"core.v1.SetOperation.Child.This"> & {
};

/**
 * Describes the message core.v1.SetOperation.Child.This.
 * Use `create(SetOperation_Child_ThisSchema)` to create a new message.
 */
export const SetOperation_Child_ThisSchema: GenMessage<SetOperation_Child_This> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 24, 0, 0);

/**
 * @generated from message core.v1.SetOperation.Child.Nil
 */
export type SetOperation_Child_Nil = Message<"core.v1.SetOperation.Child.Nil"> & {
};

/**
 * Describes the message core.v1.SetOperation.Child.Nil.
 * Use `create(SetOperation_Child_NilSchema)` to create a new message.
 */
export const SetOperation_Child_NilSchema: GenMessage<SetOperation_Child_Nil> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 24, 0, 1);

/**
 * @generated from message core.v1.TupleToUserset
 */
export type TupleToUserset = Message<"core.v1.TupleToUserset"> & {
  /**
   * @generated from field: core.v1.TupleToUserset.Tupleset tupleset = 1;
   */
  tupleset?: TupleToUserset_Tupleset;

  /**
   * @generated from field: core.v1.ComputedUserset computed_userset = 2;
   */
  computedUserset?: ComputedUserset;

  /**
   * @generated from field: core.v1.SourcePosition source_position = 3;
   */
  sourcePosition?: SourcePosition;
};

/**
 * Describes the message core.v1.TupleToUserset.
 * Use `create(TupleToUsersetSchema)` to create a new message.
 */
export const TupleToUsersetSchema: GenMessage<TupleToUserset> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 25);

/**
 * @generated from message core.v1.TupleToUserset.Tupleset
 */
export type TupleToUserset_Tupleset = Message<"core.v1.TupleToUserset.Tupleset"> & {
  /**
   * @generated from field: string relation = 1;
   */
  relation: string;
};

/**
 * Describes the message core.v1.TupleToUserset.Tupleset.
 * Use `create(TupleToUserset_TuplesetSchema)` to create a new message.
 */
export const TupleToUserset_TuplesetSchema: GenMessage<TupleToUserset_Tupleset> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 25, 0);

/**
 * @generated from message core.v1.FunctionedTupleToUserset
 */
export type FunctionedTupleToUserset = Message<"core.v1.FunctionedTupleToUserset"> & {
  /**
   * @generated from field: core.v1.FunctionedTupleToUserset.Function function = 1;
   */
  function: FunctionedTupleToUserset_Function;

  /**
   * @generated from field: core.v1.FunctionedTupleToUserset.Tupleset tupleset = 2;
   */
  tupleset?: FunctionedTupleToUserset_Tupleset;

  /**
   * @generated from field: core.v1.ComputedUserset computed_userset = 3;
   */
  computedUserset?: ComputedUserset;

  /**
   * @generated from field: core.v1.SourcePosition source_position = 4;
   */
  sourcePosition?: SourcePosition;
};

/**
 * Describes the message core.v1.FunctionedTupleToUserset.
 * Use `create(FunctionedTupleToUsersetSchema)` to create a new message.
 */
export const FunctionedTupleToUsersetSchema: GenMessage<FunctionedTupleToUserset> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 26);

/**
 * @generated from message core.v1.FunctionedTupleToUserset.Tupleset
 */
export type FunctionedTupleToUserset_Tupleset = Message<"core.v1.FunctionedTupleToUserset.Tupleset"> & {
  /**
   * @generated from field: string relation = 1;
   */
  relation: string;
};

/**
 * Describes the message core.v1.FunctionedTupleToUserset.Tupleset.
 * Use `create(FunctionedTupleToUserset_TuplesetSchema)` to create a new message.
 */
export const FunctionedTupleToUserset_TuplesetSchema: GenMessage<FunctionedTupleToUserset_Tupleset> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 26, 0);

/**
 * @generated from enum core.v1.FunctionedTupleToUserset.Function
 */
export enum FunctionedTupleToUserset_Function {
  /**
   * @generated from enum value: FUNCTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FUNCTION_ANY = 1;
   */
  ANY = 1,

  /**
   * @generated from enum value: FUNCTION_ALL = 2;
   */
  ALL = 2,
}

/**
 * Describes the enum core.v1.FunctionedTupleToUserset.Function.
 */
export const FunctionedTupleToUserset_FunctionSchema: GenEnum<FunctionedTupleToUserset_Function> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 26, 0);

/**
 * @generated from message core.v1.ComputedUserset
 */
export type ComputedUserset = Message<"core.v1.ComputedUserset"> & {
  /**
   * @generated from field: core.v1.ComputedUserset.Object object = 1;
   */
  object: ComputedUserset_Object;

  /**
   * @generated from field: string relation = 2;
   */
  relation: string;

  /**
   * @generated from field: core.v1.SourcePosition source_position = 3;
   */
  sourcePosition?: SourcePosition;
};

/**
 * Describes the message core.v1.ComputedUserset.
 * Use `create(ComputedUsersetSchema)` to create a new message.
 */
export const ComputedUsersetSchema: GenMessage<ComputedUserset> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 27);

/**
 * @generated from enum core.v1.ComputedUserset.Object
 */
export enum ComputedUserset_Object {
  /**
   * @generated from enum value: TUPLE_OBJECT = 0;
   */
  TUPLE_OBJECT = 0,

  /**
   * @generated from enum value: TUPLE_USERSET_OBJECT = 1;
   */
  TUPLE_USERSET_OBJECT = 1,
}

/**
 * Describes the enum core.v1.ComputedUserset.Object.
 */
export const ComputedUserset_ObjectSchema: GenEnum<ComputedUserset_Object> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 27, 0);

/**
 * @generated from message core.v1.SourcePosition
 */
export type SourcePosition = Message<"core.v1.SourcePosition"> & {
  /**
   * @generated from field: uint64 zero_indexed_line_number = 1;
   */
  zeroIndexedLineNumber: bigint;

  /**
   * @generated from field: uint64 zero_indexed_column_position = 2;
   */
  zeroIndexedColumnPosition: bigint;
};

/**
 * Describes the message core.v1.SourcePosition.
 * Use `create(SourcePositionSchema)` to create a new message.
 */
export const SourcePositionSchema: GenMessage<SourcePosition> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 28);

/**
 * @generated from message core.v1.CaveatExpression
 */
export type CaveatExpression = Message<"core.v1.CaveatExpression"> & {
  /**
   * @generated from oneof core.v1.CaveatExpression.operation_or_caveat
   */
  operationOrCaveat: {
    /**
     * @generated from field: core.v1.CaveatOperation operation = 1;
     */
    value: CaveatOperation;
    case: "operation";
  } | {
    /**
     * @generated from field: core.v1.ContextualizedCaveat caveat = 2;
     */
    value: ContextualizedCaveat;
    case: "caveat";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message core.v1.CaveatExpression.
 * Use `create(CaveatExpressionSchema)` to create a new message.
 */
export const CaveatExpressionSchema: GenMessage<CaveatExpression> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 29);

/**
 * @generated from message core.v1.CaveatOperation
 */
export type CaveatOperation = Message<"core.v1.CaveatOperation"> & {
  /**
   * @generated from field: core.v1.CaveatOperation.Operation op = 1;
   */
  op: CaveatOperation_Operation;

  /**
   * @generated from field: repeated core.v1.CaveatExpression children = 2;
   */
  children: CaveatExpression[];
};

/**
 * Describes the message core.v1.CaveatOperation.
 * Use `create(CaveatOperationSchema)` to create a new message.
 */
export const CaveatOperationSchema: GenMessage<CaveatOperation> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 30);

/**
 * @generated from enum core.v1.CaveatOperation.Operation
 */
export enum CaveatOperation_Operation {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: OR = 1;
   */
  OR = 1,

  /**
   * @generated from enum value: AND = 2;
   */
  AND = 2,

  /**
   * @generated from enum value: NOT = 3;
   */
  NOT = 3,
}

/**
 * Describes the enum core.v1.CaveatOperation.Operation.
 */
export const CaveatOperation_OperationSchema: GenEnum<CaveatOperation_Operation> = /*@__PURE__*/
  enumDesc(file_core_v1_core, 30, 0);

/**
 * @generated from message core.v1.RelationshipFilter
 */
export type RelationshipFilter = Message<"core.v1.RelationshipFilter"> & {
  /**
   * resource_type is the *optional* resource type of the relationship.
   * NOTE: It is not prefixed with "optional_" for legacy compatibility.
   *
   * @generated from field: string resource_type = 1;
   */
  resourceType: string;

  /**
   * optional_resource_id is the *optional* resource ID of the relationship.
   * If specified, optional_resource_id_prefix cannot be specified.
   *
   * @generated from field: string optional_resource_id = 2;
   */
  optionalResourceId: string;

  /**
   * optional_resource_id_prefix is the *optional* prefix for the resource ID of the relationship.
   * If specified, optional_resource_id cannot be specified.
   *
   * @generated from field: string optional_resource_id_prefix = 5;
   */
  optionalResourceIdPrefix: string;

  /**
   * relation is the *optional* relation of the relationship.
   *
   * @generated from field: string optional_relation = 3;
   */
  optionalRelation: string;

  /**
   * optional_subject_filter is the optional filter for the subjects of the relationships.
   *
   * @generated from field: core.v1.SubjectFilter optional_subject_filter = 4;
   */
  optionalSubjectFilter?: SubjectFilter;
};

/**
 * Describes the message core.v1.RelationshipFilter.
 * Use `create(RelationshipFilterSchema)` to create a new message.
 */
export const RelationshipFilterSchema: GenMessage<RelationshipFilter> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 31);

/**
 * SubjectFilter specifies a filter on the subject of a relationship.
 *
 * subject_type is required and all other fields are optional, and will not
 * impose any additional requirements if left unspecified.
 *
 * @generated from message core.v1.SubjectFilter
 */
export type SubjectFilter = Message<"core.v1.SubjectFilter"> & {
  /**
   * @generated from field: string subject_type = 1;
   */
  subjectType: string;

  /**
   * @generated from field: string optional_subject_id = 2;
   */
  optionalSubjectId: string;

  /**
   * @generated from field: core.v1.SubjectFilter.RelationFilter optional_relation = 3;
   */
  optionalRelation?: SubjectFilter_RelationFilter;
};

/**
 * Describes the message core.v1.SubjectFilter.
 * Use `create(SubjectFilterSchema)` to create a new message.
 */
export const SubjectFilterSchema: GenMessage<SubjectFilter> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 32);

/**
 * @generated from message core.v1.SubjectFilter.RelationFilter
 */
export type SubjectFilter_RelationFilter = Message<"core.v1.SubjectFilter.RelationFilter"> & {
  /**
   * @generated from field: string relation = 1;
   */
  relation: string;
};

/**
 * Describes the message core.v1.SubjectFilter.RelationFilter.
 * Use `create(SubjectFilter_RelationFilterSchema)` to create a new message.
 */
export const SubjectFilter_RelationFilterSchema: GenMessage<SubjectFilter_RelationFilter> = /*@__PURE__*/
  messageDesc(file_core_v1_core, 32, 0);


// @generated by protobuf-ts 2.9.1 with parameter long_type_string,generate_dependencies,optimize_code_size
// @generated from protobuf file "core/v1/core.proto" (package "core.v1", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../google/protobuf/any";
import { Struct } from "../../google/protobuf/struct";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message core.v1.RelationTuple
 */
export interface RelationTuple {
    /**
     * * resource_and_relation is the resource for the tuple
     *
     * @generated from protobuf field: core.v1.ObjectAndRelation resource_and_relation = 1;
     */
    resourceAndRelation?: ObjectAndRelation;
    /**
     * * subject is the subject for the tuple
     *
     * @generated from protobuf field: core.v1.ObjectAndRelation subject = 2;
     */
    subject?: ObjectAndRelation;
    /**
     * * caveat is a reference to a the caveat that must be enforced over the tuple *
     *
     * @generated from protobuf field: core.v1.ContextualizedCaveat caveat = 3;
     */
    caveat?: ContextualizedCaveat;
    /**
     * * integrity holds (optional) information about the integrity of the tuple
     *
     * @generated from protobuf field: core.v1.RelationshipIntegrity integrity = 4;
     */
    integrity?: RelationshipIntegrity;
    /**
     * * optional_expiration_time is the (optional) time at which the tuple expires
     *
     * @generated from protobuf field: google.protobuf.Timestamp optional_expiration_time = 5;
     */
    optionalExpirationTime?: Timestamp;
}
/**
 * @generated from protobuf message core.v1.RelationshipIntegrity
 */
export interface RelationshipIntegrity {
    /**
     * * key_id is the key ID used to hash the tuple
     *
     * @generated from protobuf field: string key_id = 1;
     */
    keyId: string;
    /**
     * * hash is the hash of the tuple
     *
     * @generated from protobuf field: bytes hash = 2;
     */
    hash: Uint8Array;
    /**
     * * hashed_at is the timestamp when the tuple was hashed
     *
     * @generated from protobuf field: google.protobuf.Timestamp hashed_at = 3;
     */
    hashedAt?: Timestamp;
}
/**
 * *
 * ContextualizedCaveat represents a reference to a caveat used to by caveated tuples.
 * The context are key-value pairs that will be injected at evaluation time.
 *
 * @generated from protobuf message core.v1.ContextualizedCaveat
 */
export interface ContextualizedCaveat {
    /**
     * * caveat_name is the name used in the schema for a stored caveat *
     *
     * @generated from protobuf field: string caveat_name = 1;
     */
    caveatName: string;
    /**
     * * context are arguments used as input during caveat evaluation with a predefined value *
     *
     * @generated from protobuf field: google.protobuf.Struct context = 2;
     */
    context?: Struct;
}
/**
 * @generated from protobuf message core.v1.CaveatDefinition
 */
export interface CaveatDefinition {
    /**
     * * name represents the globally-unique identifier of the caveat *
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * * serialized_expression is the byte representation of a caveat's logic
     *
     * @generated from protobuf field: bytes serialized_expression = 2;
     */
    serializedExpression: Uint8Array;
    /**
     * * parameters_and_types is a map from parameter name to its type
     *
     * @generated from protobuf field: map<string, core.v1.CaveatTypeReference> parameter_types = 3;
     */
    parameterTypes: {
        [key: string]: CaveatTypeReference;
    };
    /**
     * * metadata contains compiler metadata from schemas compiled into caveats
     *
     * @generated from protobuf field: core.v1.Metadata metadata = 4;
     */
    metadata?: Metadata;
    /**
     * * source_position contains the position of the caveat in the source schema, if any
     *
     * @generated from protobuf field: core.v1.SourcePosition source_position = 5;
     */
    sourcePosition?: SourcePosition;
}
/**
 * @generated from protobuf message core.v1.CaveatTypeReference
 */
export interface CaveatTypeReference {
    /**
     * @generated from protobuf field: string type_name = 1;
     */
    typeName: string;
    /**
     * @generated from protobuf field: repeated core.v1.CaveatTypeReference child_types = 2;
     */
    childTypes: CaveatTypeReference[];
}
/**
 * @generated from protobuf message core.v1.ObjectAndRelation
 */
export interface ObjectAndRelation {
    /**
     * * namespace is the full namespace path for the referenced object
     *
     * @generated from protobuf field: string namespace = 1;
     */
    namespace: string;
    /**
     * * object_id is the unique ID for the object within the namespace
     *
     * @generated from protobuf field: string object_id = 2;
     */
    objectId: string;
    /**
     * * relation is the name of the referenced relation or permission under the namespace
     *
     * @generated from protobuf field: string relation = 3;
     */
    relation: string;
}
/**
 * @generated from protobuf message core.v1.RelationReference
 */
export interface RelationReference {
    /**
     * * namespace is the full namespace path
     *
     * @generated from protobuf field: string namespace = 1;
     */
    namespace: string;
    /**
     * * relation is the name of the referenced relation or permission under the namespace
     *
     * @generated from protobuf field: string relation = 3;
     */
    relation: string;
}
/**
 * @generated from protobuf message core.v1.Zookie
 */
export interface Zookie {
    /**
     * @generated from protobuf field: string token = 1;
     */
    token: string;
}
/**
 * @generated from protobuf message core.v1.RelationTupleUpdate
 */
export interface RelationTupleUpdate {
    /**
     * @generated from protobuf field: core.v1.RelationTupleUpdate.Operation operation = 1;
     */
    operation: RelationTupleUpdate_Operation;
    /**
     * @generated from protobuf field: core.v1.RelationTuple tuple = 2;
     */
    tuple?: RelationTuple;
}
/**
 * @generated from protobuf enum core.v1.RelationTupleUpdate.Operation
 */
export enum RelationTupleUpdate_Operation {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: CREATE = 1;
     */
    CREATE = 1,
    /**
     * @generated from protobuf enum value: TOUCH = 2;
     */
    TOUCH = 2,
    /**
     * @generated from protobuf enum value: DELETE = 3;
     */
    DELETE = 3
}
/**
 * @generated from protobuf message core.v1.RelationTupleTreeNode
 */
export interface RelationTupleTreeNode {
    /**
     * @generated from protobuf oneof: node_type
     */
    nodeType: {
        oneofKind: "intermediateNode";
        /**
         * @generated from protobuf field: core.v1.SetOperationUserset intermediate_node = 1;
         */
        intermediateNode: SetOperationUserset;
    } | {
        oneofKind: "leafNode";
        /**
         * @generated from protobuf field: core.v1.DirectSubjects leaf_node = 2;
         */
        leafNode: DirectSubjects;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation expanded = 3;
     */
    expanded?: ObjectAndRelation;
    /**
     * @generated from protobuf field: core.v1.CaveatExpression caveat_expression = 4;
     */
    caveatExpression?: CaveatExpression;
}
/**
 * @generated from protobuf message core.v1.SetOperationUserset
 */
export interface SetOperationUserset {
    /**
     * @generated from protobuf field: core.v1.SetOperationUserset.Operation operation = 1;
     */
    operation: SetOperationUserset_Operation;
    /**
     * @generated from protobuf field: repeated core.v1.RelationTupleTreeNode child_nodes = 2;
     */
    childNodes: RelationTupleTreeNode[];
}
/**
 * @generated from protobuf enum core.v1.SetOperationUserset.Operation
 */
export enum SetOperationUserset_Operation {
    /**
     * @generated from protobuf enum value: INVALID = 0;
     */
    INVALID = 0,
    /**
     * @generated from protobuf enum value: UNION = 1;
     */
    UNION = 1,
    /**
     * @generated from protobuf enum value: INTERSECTION = 2;
     */
    INTERSECTION = 2,
    /**
     * @generated from protobuf enum value: EXCLUSION = 3;
     */
    EXCLUSION = 3
}
/**
 * @generated from protobuf message core.v1.DirectSubject
 */
export interface DirectSubject {
    /**
     * @generated from protobuf field: core.v1.ObjectAndRelation subject = 1;
     */
    subject?: ObjectAndRelation;
    /**
     * @generated from protobuf field: core.v1.CaveatExpression caveat_expression = 2;
     */
    caveatExpression?: CaveatExpression;
}
/**
 * @generated from protobuf message core.v1.DirectSubjects
 */
export interface DirectSubjects {
    /**
     * @generated from protobuf field: repeated core.v1.DirectSubject subjects = 1;
     */
    subjects: DirectSubject[];
}
/**
 * *
 * Metadata is compiler metadata added to namespace definitions, such as doc comments and
 * relation kinds.
 *
 * @generated from protobuf message core.v1.Metadata
 */
export interface Metadata {
    /**
     * @generated from protobuf field: repeated google.protobuf.Any metadata_message = 1;
     */
    metadataMessage: Any[];
}
/**
 * *
 * NamespaceDefinition represents a single definition of an object type
 *
 * @generated from protobuf message core.v1.NamespaceDefinition
 */
export interface NamespaceDefinition {
    /**
     * * name is the unique for the namespace, including prefixes (which are optional)
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * * relation contains the relations and permissions defined in the namespace
     *
     * @generated from protobuf field: repeated core.v1.Relation relation = 2;
     */
    relation: Relation[];
    /**
     * * metadata contains compiler metadata from schemas compiled into namespaces
     *
     * @generated from protobuf field: core.v1.Metadata metadata = 3;
     */
    metadata?: Metadata;
    /**
     * * source_position contains the position of the namespace in the source schema, if any
     *
     * @generated from protobuf field: core.v1.SourcePosition source_position = 4;
     */
    sourcePosition?: SourcePosition;
}
/**
 * *
 * Relation represents the definition of a relation or permission under a namespace.
 *
 * @generated from protobuf message core.v1.Relation
 */
export interface Relation {
    /**
     * * name is the full name for the relation or permission
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * * userset_rewrite, if specified, is the rewrite for computing the value of the permission.
     *
     * @generated from protobuf field: core.v1.UsersetRewrite userset_rewrite = 2;
     */
    usersetRewrite?: UsersetRewrite;
    /**
     * *
     * type_information, if specified, is the list of allowed object types that can appear in this
     * relation
     *
     * @generated from protobuf field: core.v1.TypeInformation type_information = 3;
     */
    typeInformation?: TypeInformation;
    /**
     * * metadata contains compiler metadata from schemas compiled into namespaces
     *
     * @generated from protobuf field: core.v1.Metadata metadata = 4;
     */
    metadata?: Metadata;
    /**
     * * source_position contains the position of the relation in the source schema, if any
     *
     * @generated from protobuf field: core.v1.SourcePosition source_position = 5;
     */
    sourcePosition?: SourcePosition;
    /**
     * @generated from protobuf field: string aliasing_relation = 6;
     */
    aliasingRelation: string;
    /**
     * @generated from protobuf field: string canonical_cache_key = 7;
     */
    canonicalCacheKey: string;
}
/**
 * *
 * ReachabilityGraph is a serialized form of a reachability graph, representing how a relation can
 * be reached from one or more subject types.
 *
 * It defines a "reverse" data flow graph, starting at a subject type, and providing all the
 * entrypoints where that subject type can be found leading to the decorated relation.
 *
 * For example, given the schema:
 * ```
 *   definition user {}
 *
 *   definition organization {
 *     relation admin: user
 *   }
 *
 *   definition resource {
 *     relation org: organization
 *     relation viewer: user
 *     relation owner: user
 *     permission view = viewer + owner + org->admin
 *   }
 * ```
 *
 * The reachability graph for `viewer` and the other relations will have entrypoints for each
 * subject type found for those relations.
 *
 * The full reachability graph for the `view` relation will have three entrypoints, representing:
 *   1) resource#viewer (computed_userset)
 *   2) resource#owner  (computed_userset)
 *   3) organization#admin (tupleset_to_userset)
 *
 * @generated from protobuf message core.v1.ReachabilityGraph
 */
export interface ReachabilityGraph {
    /**
     * *
     * entrypoints_by_subject_type provides all entrypoints by subject *type*, representing wildcards.
     * The keys of the map are the full path(s) for the namespace(s) referenced by reachable wildcards
     *
     * @generated from protobuf field: map<string, core.v1.ReachabilityEntrypoints> entrypoints_by_subject_type = 1;
     */
    entrypointsBySubjectType: {
        [key: string]: ReachabilityEntrypoints;
    };
    /**
     * *
     * entrypoints_by_subject_relation provides all entrypoints by subject type+relation.
     * The keys of the map are of the form `namespace_path#relation_name`
     *
     * @generated from protobuf field: map<string, core.v1.ReachabilityEntrypoints> entrypoints_by_subject_relation = 2;
     */
    entrypointsBySubjectRelation: {
        [key: string]: ReachabilityEntrypoints;
    };
}
/**
 * *
 * ReachabilityEntrypoints represents all the entrypoints for a specific subject type or subject
 * relation into the reachability graph for a particular target relation.
 *
 * @generated from protobuf message core.v1.ReachabilityEntrypoints
 */
export interface ReachabilityEntrypoints {
    /**
     * *
     * entrypoints are the entrypoints found.
     *
     * @generated from protobuf field: repeated core.v1.ReachabilityEntrypoint entrypoints = 1;
     */
    entrypoints: ReachabilityEntrypoint[];
    /**
     * *
     * subject_type, if specified, is the type of subjects to which the entrypoint(s) apply. A
     * subject type is only set for wildcards.
     *
     * @generated from protobuf field: string subject_type = 2;
     */
    subjectType: string;
    /**
     * *
     * subject_relation, if specified, is the type and relation of subjects to which the
     * entrypoint(s) apply.
     *
     * @generated from protobuf field: core.v1.RelationReference subject_relation = 3;
     */
    subjectRelation?: RelationReference;
}
/**
 * *
 * ReachabilityEntrypoint represents a single entrypoint for a specific subject type or subject
 * relation into the reachability graph for a particular target relation.
 *
 * @generated from protobuf message core.v1.ReachabilityEntrypoint
 */
export interface ReachabilityEntrypoint {
    /**
     * *
     * kind is the kind of the entrypoint.
     *
     * @generated from protobuf field: core.v1.ReachabilityEntrypoint.ReachabilityEntrypointKind kind = 1;
     */
    kind: ReachabilityEntrypoint_ReachabilityEntrypointKind;
    /**
     * *
     * target_relation is the relation on which the entrypoint exists.
     *
     * @generated from protobuf field: core.v1.RelationReference target_relation = 2;
     */
    targetRelation?: RelationReference;
    /**
     * *
     * result_status contains the status of objects found for this entrypoint as direct results for
     * the parent relation/permission.
     *
     * @generated from protobuf field: core.v1.ReachabilityEntrypoint.EntrypointResultStatus result_status = 4;
     */
    resultStatus: ReachabilityEntrypoint_EntrypointResultStatus;
    /**
     * *
     * tupleset_relation is the name of the tupleset relation on the TupleToUserset this entrypoint
     * represents, if applicable.
     *
     * @generated from protobuf field: string tupleset_relation = 5;
     */
    tuplesetRelation: string;
    /**
     * *
     * computed_userset_relation is the name of the computed userset relation on the ComputedUserset
     * this entrypoint represents, if applicable.
     *
     * @generated from protobuf field: string computed_userset_relation = 6;
     */
    computedUsersetRelation: string;
}
/**
 * @generated from protobuf enum core.v1.ReachabilityEntrypoint.ReachabilityEntrypointKind
 */
export enum ReachabilityEntrypoint_ReachabilityEntrypointKind {
    /**
     * *
     * RELATION_ENTRYPOINT indicates an entrypoint where the subject object can be directly
     * found for a relationship.
     *
     * @generated from protobuf enum value: RELATION_ENTRYPOINT = 0;
     */
    RELATION_ENTRYPOINT = 0,
    /**
     * *
     * COMPUTED_USERSET_ENTRYPOINT indicates an entrypoint where the subject's relation is
     * "rewritten" via a `computed_userset` to the target permission's operation node.
     *
     * @generated from protobuf enum value: COMPUTED_USERSET_ENTRYPOINT = 1;
     */
    COMPUTED_USERSET_ENTRYPOINT = 1,
    /**
     * *
     * TUPLESET_TO_USERSET_ENTRYPOINT indicates an entrypoint where the subject's relation is
     * walked via a `tupleset_to_userset` in the target permission's operation node.
     *
     * @generated from protobuf enum value: TUPLESET_TO_USERSET_ENTRYPOINT = 2;
     */
    TUPLESET_TO_USERSET_ENTRYPOINT = 2
}
/**
 * @generated from protobuf enum core.v1.ReachabilityEntrypoint.EntrypointResultStatus
 */
export enum ReachabilityEntrypoint_EntrypointResultStatus {
    /**
     * *
     * REACHABLE_CONDITIONAL_RESULT indicates that the entrypoint is under one or more intersections
     * or exclusion operations, indicating that any reachable object *may* be a result, conditional
     * on the parent non-union operation(s).
     *
     * @generated from protobuf enum value: REACHABLE_CONDITIONAL_RESULT = 0;
     */
    REACHABLE_CONDITIONAL_RESULT = 0,
    /**
     * *
     * DIRECT_OPERATION_RESULT indicates that the entrypoint exists solely under zero or more
     * union operations, making any reachable object also a *result* of the relation or permission.
     *
     * @generated from protobuf enum value: DIRECT_OPERATION_RESULT = 1;
     */
    DIRECT_OPERATION_RESULT = 1
}
/**
 * *
 * TypeInformation defines the allowed types for a relation.
 *
 * @generated from protobuf message core.v1.TypeInformation
 */
export interface TypeInformation {
    /**
     * *
     * allowed_direct_relations are those relation types allowed to be placed into a relation,
     * e.g. the types of subjects allowed when a relationship is written to the relation
     *
     * @generated from protobuf field: repeated core.v1.AllowedRelation allowed_direct_relations = 1;
     */
    allowedDirectRelations: AllowedRelation[];
}
/**
 * *
 * AllowedRelation is an allowed type of a relation when used as a subject.
 *
 * @generated from protobuf message core.v1.AllowedRelation
 */
export interface AllowedRelation {
    /**
     * * namespace is the full namespace path of the allowed object type
     *
     * @generated from protobuf field: string namespace = 1;
     */
    namespace: string;
    /**
     * @generated from protobuf oneof: relation_or_wildcard
     */
    relationOrWildcard: {
        oneofKind: "relation";
        /**
         * @generated from protobuf field: string relation = 3;
         */
        relation: string;
    } | {
        oneofKind: "publicWildcard";
        /**
         * @generated from protobuf field: core.v1.AllowedRelation.PublicWildcard public_wildcard = 4;
         */
        publicWildcard: AllowedRelation_PublicWildcard;
    } | {
        oneofKind: undefined;
    };
    /**
     * * source_position contains the position of the type in the source schema, if any
     *
     * @generated from protobuf field: core.v1.SourcePosition source_position = 5;
     */
    sourcePosition?: SourcePosition;
    /**
     * *
     * required_caveat defines the required caveat on this relation.
     *
     * @generated from protobuf field: core.v1.AllowedCaveat required_caveat = 6;
     */
    requiredCaveat?: AllowedCaveat;
    /**
     * *
     * required_expiration defines the required expiration on this relation.
     *
     * @generated from protobuf field: core.v1.ExpirationTrait required_expiration = 7;
     */
    requiredExpiration?: ExpirationTrait;
}
/**
 * @generated from protobuf message core.v1.AllowedRelation.PublicWildcard
 */
export interface AllowedRelation_PublicWildcard {
}
/**
 * *
 * ExpirationTrait is an expiration trait of a relation.
 *
 * @generated from protobuf message core.v1.ExpirationTrait
 */
export interface ExpirationTrait {
}
/**
 * *
 * AllowedCaveat is an allowed caveat of a relation.
 *
 * @generated from protobuf message core.v1.AllowedCaveat
 */
export interface AllowedCaveat {
    /**
     * *
     * caveat_name is the name of the allowed caveat.
     *
     * @generated from protobuf field: string caveat_name = 1;
     */
    caveatName: string;
}
/**
 * @generated from protobuf message core.v1.UsersetRewrite
 */
export interface UsersetRewrite {
    /**
     * @generated from protobuf oneof: rewrite_operation
     */
    rewriteOperation: {
        oneofKind: "union";
        /**
         * @generated from protobuf field: core.v1.SetOperation union = 1;
         */
        union: SetOperation;
    } | {
        oneofKind: "intersection";
        /**
         * @generated from protobuf field: core.v1.SetOperation intersection = 2;
         */
        intersection: SetOperation;
    } | {
        oneofKind: "exclusion";
        /**
         * @generated from protobuf field: core.v1.SetOperation exclusion = 3;
         */
        exclusion: SetOperation;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: core.v1.SourcePosition source_position = 4;
     */
    sourcePosition?: SourcePosition;
}
/**
 * @generated from protobuf message core.v1.SetOperation
 */
export interface SetOperation {
    /**
     * @generated from protobuf field: repeated core.v1.SetOperation.Child child = 1;
     */
    child: SetOperation_Child[];
}
/**
 * @generated from protobuf message core.v1.SetOperation.Child
 */
export interface SetOperation_Child {
    /**
     * @generated from protobuf oneof: child_type
     */
    childType: {
        oneofKind: "This";
        /**
         * @generated from protobuf field: core.v1.SetOperation.Child.This _this = 1;
         */
        This: SetOperation_Child_This;
    } | {
        oneofKind: "computedUserset";
        /**
         * @generated from protobuf field: core.v1.ComputedUserset computed_userset = 2;
         */
        computedUserset: ComputedUserset;
    } | {
        oneofKind: "tupleToUserset";
        /**
         * @generated from protobuf field: core.v1.TupleToUserset tuple_to_userset = 3;
         */
        tupleToUserset: TupleToUserset;
    } | {
        oneofKind: "usersetRewrite";
        /**
         * @generated from protobuf field: core.v1.UsersetRewrite userset_rewrite = 4;
         */
        usersetRewrite: UsersetRewrite;
    } | {
        oneofKind: "functionedTupleToUserset";
        /**
         * @generated from protobuf field: core.v1.FunctionedTupleToUserset functioned_tuple_to_userset = 8;
         */
        functionedTupleToUserset: FunctionedTupleToUserset;
    } | {
        oneofKind: "Nil";
        /**
         * @generated from protobuf field: core.v1.SetOperation.Child.Nil _nil = 6;
         */
        Nil: SetOperation_Child_Nil;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: core.v1.SourcePosition source_position = 5;
     */
    sourcePosition?: SourcePosition;
    /**
     * *
     * operation_path (if specified) is the *unique* ID for the set operation in the permission
     * definition. It is a heirarchy representing the position of the operation under its parent
     * operation. For example, the operation path of an operation which is the third child of the
     * fourth top-level operation, will be `3,2`.
     *
     * @generated from protobuf field: repeated uint32 operation_path = 7;
     */
    operationPath: number[];
}
/**
 * @generated from protobuf message core.v1.SetOperation.Child.This
 */
export interface SetOperation_Child_This {
}
/**
 * @generated from protobuf message core.v1.SetOperation.Child.Nil
 */
export interface SetOperation_Child_Nil {
}
/**
 * @generated from protobuf message core.v1.TupleToUserset
 */
export interface TupleToUserset {
    /**
     * @generated from protobuf field: core.v1.TupleToUserset.Tupleset tupleset = 1;
     */
    tupleset?: TupleToUserset_Tupleset;
    /**
     * @generated from protobuf field: core.v1.ComputedUserset computed_userset = 2;
     */
    computedUserset?: ComputedUserset;
    /**
     * @generated from protobuf field: core.v1.SourcePosition source_position = 3;
     */
    sourcePosition?: SourcePosition;
}
/**
 * @generated from protobuf message core.v1.TupleToUserset.Tupleset
 */
export interface TupleToUserset_Tupleset {
    /**
     * @generated from protobuf field: string relation = 1;
     */
    relation: string;
}
/**
 * @generated from protobuf message core.v1.FunctionedTupleToUserset
 */
export interface FunctionedTupleToUserset {
    /**
     * @generated from protobuf field: core.v1.FunctionedTupleToUserset.Function function = 1;
     */
    function: FunctionedTupleToUserset_Function;
    /**
     * @generated from protobuf field: core.v1.FunctionedTupleToUserset.Tupleset tupleset = 2;
     */
    tupleset?: FunctionedTupleToUserset_Tupleset;
    /**
     * @generated from protobuf field: core.v1.ComputedUserset computed_userset = 3;
     */
    computedUserset?: ComputedUserset;
    /**
     * @generated from protobuf field: core.v1.SourcePosition source_position = 4;
     */
    sourcePosition?: SourcePosition;
}
/**
 * @generated from protobuf message core.v1.FunctionedTupleToUserset.Tupleset
 */
export interface FunctionedTupleToUserset_Tupleset {
    /**
     * @generated from protobuf field: string relation = 1;
     */
    relation: string;
}
/**
 * @generated from protobuf enum core.v1.FunctionedTupleToUserset.Function
 */
export enum FunctionedTupleToUserset_Function {
    /**
     * @generated from protobuf enum value: FUNCTION_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: FUNCTION_ANY = 1;
     */
    ANY = 1,
    /**
     * @generated from protobuf enum value: FUNCTION_ALL = 2;
     */
    ALL = 2
}
/**
 * @generated from protobuf message core.v1.ComputedUserset
 */
export interface ComputedUserset {
    /**
     * @generated from protobuf field: core.v1.ComputedUserset.Object object = 1;
     */
    object: ComputedUserset_Object;
    /**
     * @generated from protobuf field: string relation = 2;
     */
    relation: string;
    /**
     * @generated from protobuf field: core.v1.SourcePosition source_position = 3;
     */
    sourcePosition?: SourcePosition;
}
/**
 * @generated from protobuf enum core.v1.ComputedUserset.Object
 */
export enum ComputedUserset_Object {
    /**
     * @generated from protobuf enum value: TUPLE_OBJECT = 0;
     */
    TUPLE_OBJECT = 0,
    /**
     * @generated from protobuf enum value: TUPLE_USERSET_OBJECT = 1;
     */
    TUPLE_USERSET_OBJECT = 1
}
/**
 * @generated from protobuf message core.v1.SourcePosition
 */
export interface SourcePosition {
    /**
     * @generated from protobuf field: uint64 zero_indexed_line_number = 1;
     */
    zeroIndexedLineNumber: string;
    /**
     * @generated from protobuf field: uint64 zero_indexed_column_position = 2;
     */
    zeroIndexedColumnPosition: string;
}
/**
 * @generated from protobuf message core.v1.CaveatExpression
 */
export interface CaveatExpression {
    /**
     * @generated from protobuf oneof: operation_or_caveat
     */
    operationOrCaveat: {
        oneofKind: "operation";
        /**
         * @generated from protobuf field: core.v1.CaveatOperation operation = 1;
         */
        operation: CaveatOperation;
    } | {
        oneofKind: "caveat";
        /**
         * @generated from protobuf field: core.v1.ContextualizedCaveat caveat = 2;
         */
        caveat: ContextualizedCaveat;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message core.v1.CaveatOperation
 */
export interface CaveatOperation {
    /**
     * @generated from protobuf field: core.v1.CaveatOperation.Operation op = 1;
     */
    op: CaveatOperation_Operation;
    /**
     * @generated from protobuf field: repeated core.v1.CaveatExpression children = 2;
     */
    children: CaveatExpression[];
}
/**
 * @generated from protobuf enum core.v1.CaveatOperation.Operation
 */
export enum CaveatOperation_Operation {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: OR = 1;
     */
    OR = 1,
    /**
     * @generated from protobuf enum value: AND = 2;
     */
    AND = 2,
    /**
     * @generated from protobuf enum value: NOT = 3;
     */
    NOT = 3
}
/**
 * @generated from protobuf message core.v1.RelationshipFilter
 */
export interface RelationshipFilter {
    /**
     * resource_type is the *optional* resource type of the relationship.
     * NOTE: It is not prefixed with "optional_" for legacy compatibility.
     *
     * @generated from protobuf field: string resource_type = 1;
     */
    resourceType: string;
    /**
     * optional_resource_id is the *optional* resource ID of the relationship.
     * If specified, optional_resource_id_prefix cannot be specified.
     *
     * @generated from protobuf field: string optional_resource_id = 2;
     */
    optionalResourceId: string;
    /**
     * optional_resource_id_prefix is the *optional* prefix for the resource ID of the relationship.
     * If specified, optional_resource_id cannot be specified.
     *
     * @generated from protobuf field: string optional_resource_id_prefix = 5;
     */
    optionalResourceIdPrefix: string;
    /**
     * relation is the *optional* relation of the relationship.
     *
     * @generated from protobuf field: string optional_relation = 3;
     */
    optionalRelation: string;
    /**
     * optional_subject_filter is the optional filter for the subjects of the relationships.
     *
     * @generated from protobuf field: core.v1.SubjectFilter optional_subject_filter = 4;
     */
    optionalSubjectFilter?: SubjectFilter;
}
/**
 * SubjectFilter specifies a filter on the subject of a relationship.
 *
 * subject_type is required and all other fields are optional, and will not
 * impose any additional requirements if left unspecified.
 *
 * @generated from protobuf message core.v1.SubjectFilter
 */
export interface SubjectFilter {
    /**
     * @generated from protobuf field: string subject_type = 1;
     */
    subjectType: string;
    /**
     * @generated from protobuf field: string optional_subject_id = 2;
     */
    optionalSubjectId: string;
    /**
     * @generated from protobuf field: core.v1.SubjectFilter.RelationFilter optional_relation = 3;
     */
    optionalRelation?: SubjectFilter_RelationFilter;
}
/**
 * @generated from protobuf message core.v1.SubjectFilter.RelationFilter
 */
export interface SubjectFilter_RelationFilter {
    /**
     * @generated from protobuf field: string relation = 1;
     */
    relation: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class RelationTuple$Type extends MessageType<RelationTuple> {
    constructor() {
        super("core.v1.RelationTuple", [
            { no: 1, name: "resource_and_relation", kind: "message", T: () => ObjectAndRelation, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "subject", kind: "message", T: () => ObjectAndRelation, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "caveat", kind: "message", T: () => ContextualizedCaveat, options: { "validate.rules": { message: { required: false } } } },
            { no: 4, name: "integrity", kind: "message", T: () => RelationshipIntegrity, options: { "validate.rules": { message: { required: false } } } },
            { no: 5, name: "optional_expiration_time", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.RelationTuple
 */
export const RelationTuple = new RelationTuple$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelationshipIntegrity$Type extends MessageType<RelationshipIntegrity> {
    constructor() {
        super("core.v1.RelationshipIntegrity", [
            { no: 1, name: "key_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "hash", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "hashed_at", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.RelationshipIntegrity
 */
export const RelationshipIntegrity = new RelationshipIntegrity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ContextualizedCaveat$Type extends MessageType<ContextualizedCaveat> {
    constructor() {
        super("core.v1.ContextualizedCaveat", [
            { no: 1, name: "caveat_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^(([a-zA-Z0-9_][a-zA-Z0-9/_|-]{0,127})|\\*)$" } } } },
            { no: 2, name: "context", kind: "message", T: () => Struct, options: { "validate.rules": { message: { required: false } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ContextualizedCaveat
 */
export const ContextualizedCaveat = new ContextualizedCaveat$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CaveatDefinition$Type extends MessageType<CaveatDefinition> {
    constructor() {
        super("core.v1.CaveatDefinition", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^(([a-zA-Z0-9_][a-zA-Z0-9/_|-]{0,127})|\\*)$" } } } },
            { no: 2, name: "serialized_expression", kind: "scalar", T: 12 /*ScalarType.BYTES*/, options: { "validate.rules": { bytes: { minLen: "0", maxLen: "4096" } } } },
            { no: 3, name: "parameter_types", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => CaveatTypeReference }, options: { "validate.rules": { map: { minPairs: "1", maxPairs: "20" } } } },
            { no: 4, name: "metadata", kind: "message", T: () => Metadata },
            { no: 5, name: "source_position", kind: "message", T: () => SourcePosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.CaveatDefinition
 */
export const CaveatDefinition = new CaveatDefinition$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CaveatTypeReference$Type extends MessageType<CaveatTypeReference> {
    constructor() {
        super("core.v1.CaveatTypeReference", [
            { no: 1, name: "type_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "child_types", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CaveatTypeReference, options: { "validate.rules": { repeated: { minItems: "0", maxItems: "1" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.CaveatTypeReference
 */
export const CaveatTypeReference = new CaveatTypeReference$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ObjectAndRelation$Type extends MessageType<ObjectAndRelation> {
    constructor() {
        super("core.v1.ObjectAndRelation", [
            { no: 1, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)*[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 2, name: "object_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1024", pattern: "^(([a-zA-Z0-9/_|\\-=+]{1,})|\\*)$" } } } },
            { no: 3, name: "relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^(\\.\\.\\.|[a-z][a-z0-9_]{1,62}[a-z0-9])$" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ObjectAndRelation
 */
export const ObjectAndRelation = new ObjectAndRelation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelationReference$Type extends MessageType<RelationReference> {
    constructor() {
        super("core.v1.RelationReference", [
            { no: 1, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)*[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 3, name: "relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^(\\.\\.\\.|[a-z][a-z0-9_]{1,62}[a-z0-9])$" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.RelationReference
 */
export const RelationReference = new RelationReference$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Zookie$Type extends MessageType<Zookie> {
    constructor() {
        super("core.v1.Zookie", [
            { no: 1, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { minBytes: "1" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.Zookie
 */
export const Zookie = new Zookie$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelationTupleUpdate$Type extends MessageType<RelationTupleUpdate> {
    constructor() {
        super("core.v1.RelationTupleUpdate", [
            { no: 1, name: "operation", kind: "enum", T: () => ["core.v1.RelationTupleUpdate.Operation", RelationTupleUpdate_Operation], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 2, name: "tuple", kind: "message", T: () => RelationTuple, options: { "validate.rules": { message: { required: true } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.RelationTupleUpdate
 */
export const RelationTupleUpdate = new RelationTupleUpdate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelationTupleTreeNode$Type extends MessageType<RelationTupleTreeNode> {
    constructor() {
        super("core.v1.RelationTupleTreeNode", [
            { no: 1, name: "intermediate_node", kind: "message", oneof: "nodeType", T: () => SetOperationUserset },
            { no: 2, name: "leaf_node", kind: "message", oneof: "nodeType", T: () => DirectSubjects },
            { no: 3, name: "expanded", kind: "message", T: () => ObjectAndRelation },
            { no: 4, name: "caveat_expression", kind: "message", T: () => CaveatExpression }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.RelationTupleTreeNode
 */
export const RelationTupleTreeNode = new RelationTupleTreeNode$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetOperationUserset$Type extends MessageType<SetOperationUserset> {
    constructor() {
        super("core.v1.SetOperationUserset", [
            { no: 1, name: "operation", kind: "enum", T: () => ["core.v1.SetOperationUserset.Operation", SetOperationUserset_Operation] },
            { no: 2, name: "child_nodes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RelationTupleTreeNode }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SetOperationUserset
 */
export const SetOperationUserset = new SetOperationUserset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DirectSubject$Type extends MessageType<DirectSubject> {
    constructor() {
        super("core.v1.DirectSubject", [
            { no: 1, name: "subject", kind: "message", T: () => ObjectAndRelation },
            { no: 2, name: "caveat_expression", kind: "message", T: () => CaveatExpression }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.DirectSubject
 */
export const DirectSubject = new DirectSubject$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DirectSubjects$Type extends MessageType<DirectSubjects> {
    constructor() {
        super("core.v1.DirectSubjects", [
            { no: 1, name: "subjects", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DirectSubject }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.DirectSubjects
 */
export const DirectSubjects = new DirectSubjects$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Metadata$Type extends MessageType<Metadata> {
    constructor() {
        super("core.v1.Metadata", [
            { no: 1, name: "metadata_message", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Any, options: { "validate.rules": { repeated: { minItems: "1", items: { message: { required: true }, any: { required: true, in: ["type.googleapis.com/impl.v1.DocComment", "type.googleapis.com/impl.v1.RelationMetadata"] } } } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.Metadata
 */
export const Metadata = new Metadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NamespaceDefinition$Type extends MessageType<NamespaceDefinition> {
    constructor() {
        super("core.v1.NamespaceDefinition", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^([a-z][a-z0-9_]{1,62}[a-z0-9]/)*[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 2, name: "relation", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Relation },
            { no: 3, name: "metadata", kind: "message", T: () => Metadata },
            { no: 4, name: "source_position", kind: "message", T: () => SourcePosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.NamespaceDefinition
 */
export const NamespaceDefinition = new NamespaceDefinition$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Relation$Type extends MessageType<Relation> {
    constructor() {
        super("core.v1.Relation", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 2, name: "userset_rewrite", kind: "message", T: () => UsersetRewrite },
            { no: 3, name: "type_information", kind: "message", T: () => TypeInformation },
            { no: 4, name: "metadata", kind: "message", T: () => Metadata },
            { no: 5, name: "source_position", kind: "message", T: () => SourcePosition },
            { no: 6, name: "aliasing_relation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "canonical_cache_key", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.Relation
 */
export const Relation = new Relation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReachabilityGraph$Type extends MessageType<ReachabilityGraph> {
    constructor() {
        super("core.v1.ReachabilityGraph", [
            { no: 1, name: "entrypoints_by_subject_type", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => ReachabilityEntrypoints } },
            { no: 2, name: "entrypoints_by_subject_relation", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => ReachabilityEntrypoints } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ReachabilityGraph
 */
export const ReachabilityGraph = new ReachabilityGraph$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReachabilityEntrypoints$Type extends MessageType<ReachabilityEntrypoints> {
    constructor() {
        super("core.v1.ReachabilityEntrypoints", [
            { no: 1, name: "entrypoints", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReachabilityEntrypoint },
            { no: 2, name: "subject_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "subject_relation", kind: "message", T: () => RelationReference }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ReachabilityEntrypoints
 */
export const ReachabilityEntrypoints = new ReachabilityEntrypoints$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReachabilityEntrypoint$Type extends MessageType<ReachabilityEntrypoint> {
    constructor() {
        super("core.v1.ReachabilityEntrypoint", [
            { no: 1, name: "kind", kind: "enum", T: () => ["core.v1.ReachabilityEntrypoint.ReachabilityEntrypointKind", ReachabilityEntrypoint_ReachabilityEntrypointKind] },
            { no: 2, name: "target_relation", kind: "message", T: () => RelationReference },
            { no: 4, name: "result_status", kind: "enum", T: () => ["core.v1.ReachabilityEntrypoint.EntrypointResultStatus", ReachabilityEntrypoint_EntrypointResultStatus] },
            { no: 5, name: "tupleset_relation", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "computed_userset_relation", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ReachabilityEntrypoint
 */
export const ReachabilityEntrypoint = new ReachabilityEntrypoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TypeInformation$Type extends MessageType<TypeInformation> {
    constructor() {
        super("core.v1.TypeInformation", [
            { no: 1, name: "allowed_direct_relations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AllowedRelation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.TypeInformation
 */
export const TypeInformation = new TypeInformation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllowedRelation$Type extends MessageType<AllowedRelation> {
    constructor() {
        super("core.v1.AllowedRelation", [
            { no: 1, name: "namespace", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)*[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 3, name: "relation", kind: "scalar", oneof: "relationOrWildcard", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^(\\.\\.\\.|[a-z][a-z0-9_]{1,62}[a-z0-9])$" } } } },
            { no: 4, name: "public_wildcard", kind: "message", oneof: "relationOrWildcard", T: () => AllowedRelation_PublicWildcard },
            { no: 5, name: "source_position", kind: "message", T: () => SourcePosition },
            { no: 6, name: "required_caveat", kind: "message", T: () => AllowedCaveat },
            { no: 7, name: "required_expiration", kind: "message", T: () => ExpirationTrait }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.AllowedRelation
 */
export const AllowedRelation = new AllowedRelation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllowedRelation_PublicWildcard$Type extends MessageType<AllowedRelation_PublicWildcard> {
    constructor() {
        super("core.v1.AllowedRelation.PublicWildcard", []);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.AllowedRelation.PublicWildcard
 */
export const AllowedRelation_PublicWildcard = new AllowedRelation_PublicWildcard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExpirationTrait$Type extends MessageType<ExpirationTrait> {
    constructor() {
        super("core.v1.ExpirationTrait", []);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ExpirationTrait
 */
export const ExpirationTrait = new ExpirationTrait$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllowedCaveat$Type extends MessageType<AllowedCaveat> {
    constructor() {
        super("core.v1.AllowedCaveat", [
            { no: 1, name: "caveat_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.AllowedCaveat
 */
export const AllowedCaveat = new AllowedCaveat$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UsersetRewrite$Type extends MessageType<UsersetRewrite> {
    constructor() {
        super("core.v1.UsersetRewrite", [
            { no: 1, name: "union", kind: "message", oneof: "rewriteOperation", T: () => SetOperation, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "intersection", kind: "message", oneof: "rewriteOperation", T: () => SetOperation, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "exclusion", kind: "message", oneof: "rewriteOperation", T: () => SetOperation, options: { "validate.rules": { message: { required: true } } } },
            { no: 4, name: "source_position", kind: "message", T: () => SourcePosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.UsersetRewrite
 */
export const UsersetRewrite = new UsersetRewrite$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetOperation$Type extends MessageType<SetOperation> {
    constructor() {
        super("core.v1.SetOperation", [
            { no: 1, name: "child", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SetOperation_Child, options: { "validate.rules": { repeated: { minItems: "1", items: { message: { required: true } } } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SetOperation
 */
export const SetOperation = new SetOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetOperation_Child$Type extends MessageType<SetOperation_Child> {
    constructor() {
        super("core.v1.SetOperation.Child", [
            { no: 1, name: "_this", kind: "message", oneof: "childType", T: () => SetOperation_Child_This },
            { no: 2, name: "computed_userset", kind: "message", oneof: "childType", T: () => ComputedUserset, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "tuple_to_userset", kind: "message", oneof: "childType", T: () => TupleToUserset, options: { "validate.rules": { message: { required: true } } } },
            { no: 4, name: "userset_rewrite", kind: "message", oneof: "childType", T: () => UsersetRewrite, options: { "validate.rules": { message: { required: true } } } },
            { no: 8, name: "functioned_tuple_to_userset", kind: "message", oneof: "childType", T: () => FunctionedTupleToUserset, options: { "validate.rules": { message: { required: true } } } },
            { no: 6, name: "_nil", kind: "message", oneof: "childType", T: () => SetOperation_Child_Nil },
            { no: 5, name: "source_position", kind: "message", T: () => SourcePosition },
            { no: 7, name: "operation_path", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SetOperation.Child
 */
export const SetOperation_Child = new SetOperation_Child$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetOperation_Child_This$Type extends MessageType<SetOperation_Child_This> {
    constructor() {
        super("core.v1.SetOperation.Child.This", []);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SetOperation.Child.This
 */
export const SetOperation_Child_This = new SetOperation_Child_This$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetOperation_Child_Nil$Type extends MessageType<SetOperation_Child_Nil> {
    constructor() {
        super("core.v1.SetOperation.Child.Nil", []);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SetOperation.Child.Nil
 */
export const SetOperation_Child_Nil = new SetOperation_Child_Nil$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TupleToUserset$Type extends MessageType<TupleToUserset> {
    constructor() {
        super("core.v1.TupleToUserset", [
            { no: 1, name: "tupleset", kind: "message", T: () => TupleToUserset_Tupleset, options: { "validate.rules": { message: { required: true } } } },
            { no: 2, name: "computed_userset", kind: "message", T: () => ComputedUserset, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "source_position", kind: "message", T: () => SourcePosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.TupleToUserset
 */
export const TupleToUserset = new TupleToUserset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TupleToUserset_Tupleset$Type extends MessageType<TupleToUserset_Tupleset> {
    constructor() {
        super("core.v1.TupleToUserset.Tupleset", [
            { no: 1, name: "relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.TupleToUserset.Tupleset
 */
export const TupleToUserset_Tupleset = new TupleToUserset_Tupleset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FunctionedTupleToUserset$Type extends MessageType<FunctionedTupleToUserset> {
    constructor() {
        super("core.v1.FunctionedTupleToUserset", [
            { no: 1, name: "function", kind: "enum", T: () => ["core.v1.FunctionedTupleToUserset.Function", FunctionedTupleToUserset_Function, "FUNCTION_"], options: { "validate.rules": { enum: { definedOnly: true, notIn: [0] } } } },
            { no: 2, name: "tupleset", kind: "message", T: () => FunctionedTupleToUserset_Tupleset, options: { "validate.rules": { message: { required: true } } } },
            { no: 3, name: "computed_userset", kind: "message", T: () => ComputedUserset, options: { "validate.rules": { message: { required: true } } } },
            { no: 4, name: "source_position", kind: "message", T: () => SourcePosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.FunctionedTupleToUserset
 */
export const FunctionedTupleToUserset = new FunctionedTupleToUserset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FunctionedTupleToUserset_Tupleset$Type extends MessageType<FunctionedTupleToUserset_Tupleset> {
    constructor() {
        super("core.v1.FunctionedTupleToUserset.Tupleset", [
            { no: 1, name: "relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.FunctionedTupleToUserset.Tupleset
 */
export const FunctionedTupleToUserset_Tupleset = new FunctionedTupleToUserset_Tupleset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComputedUserset$Type extends MessageType<ComputedUserset> {
    constructor() {
        super("core.v1.ComputedUserset", [
            { no: 1, name: "object", kind: "enum", T: () => ["core.v1.ComputedUserset.Object", ComputedUserset_Object], options: { "validate.rules": { enum: { definedOnly: true } } } },
            { no: 2, name: "relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 3, name: "source_position", kind: "message", T: () => SourcePosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.ComputedUserset
 */
export const ComputedUserset = new ComputedUserset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SourcePosition$Type extends MessageType<SourcePosition> {
    constructor() {
        super("core.v1.SourcePosition", [
            { no: 1, name: "zero_indexed_line_number", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "zero_indexed_column_position", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SourcePosition
 */
export const SourcePosition = new SourcePosition$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CaveatExpression$Type extends MessageType<CaveatExpression> {
    constructor() {
        super("core.v1.CaveatExpression", [
            { no: 1, name: "operation", kind: "message", oneof: "operationOrCaveat", T: () => CaveatOperation },
            { no: 2, name: "caveat", kind: "message", oneof: "operationOrCaveat", T: () => ContextualizedCaveat }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.CaveatExpression
 */
export const CaveatExpression = new CaveatExpression$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CaveatOperation$Type extends MessageType<CaveatOperation> {
    constructor() {
        super("core.v1.CaveatOperation", [
            { no: 1, name: "op", kind: "enum", T: () => ["core.v1.CaveatOperation.Operation", CaveatOperation_Operation] },
            { no: 2, name: "children", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CaveatExpression }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.CaveatOperation
 */
export const CaveatOperation = new CaveatOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RelationshipFilter$Type extends MessageType<RelationshipFilter> {
    constructor() {
        super("core.v1.RelationshipFilter", [
            { no: 1, name: "resource_type", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^(([a-z][a-z0-9_]{1,61}[a-z0-9]/)*[a-z][a-z0-9_]{1,62}[a-z0-9])?$" } } } },
            { no: 2, name: "optional_resource_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1024", pattern: "^([a-zA-Z0-9/_|\\-=+]{1,})?$" } } } },
            { no: 5, name: "optional_resource_id_prefix", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1024", pattern: "^([a-zA-Z0-9/_|\\-=+]{1,})?$" } } } },
            { no: 3, name: "optional_relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^([a-z][a-z0-9_]{1,62}[a-z0-9])?$" } } } },
            { no: 4, name: "optional_subject_filter", kind: "message", T: () => SubjectFilter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.RelationshipFilter
 */
export const RelationshipFilter = new RelationshipFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubjectFilter$Type extends MessageType<SubjectFilter> {
    constructor() {
        super("core.v1.SubjectFilter", [
            { no: 1, name: "subject_type", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "128", pattern: "^([a-z][a-z0-9_]{1,61}[a-z0-9]/)*[a-z][a-z0-9_]{1,62}[a-z0-9]$" } } } },
            { no: 2, name: "optional_subject_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "1024", pattern: "^(([a-zA-Z0-9/_|\\-=+]{1,})|\\*)?$" } } } },
            { no: 3, name: "optional_relation", kind: "message", T: () => SubjectFilter_RelationFilter }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SubjectFilter
 */
export const SubjectFilter = new SubjectFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubjectFilter_RelationFilter$Type extends MessageType<SubjectFilter_RelationFilter> {
    constructor() {
        super("core.v1.SubjectFilter.RelationFilter", [
            { no: 1, name: "relation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "validate.rules": { string: { maxBytes: "64", pattern: "^([a-z][a-z0-9_]{1,62}[a-z0-9])?$" } } } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message core.v1.SubjectFilter.RelationFilter
 */
export const SubjectFilter_RelationFilter = new SubjectFilter_RelationFilter$Type();

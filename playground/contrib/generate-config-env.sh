#!/usr/bin/env bash

validate_env() {
    if [ -z "${PLAYGROUND_AUTHENTICATION_ENGINE}" ]; then
        echo "PLAYGROUND_AUTHENTICATION_ENGINE env var not set. Defaulting to none"
    fi
}

generate_env() {
    env_file=$1
    cat > "$env_file" << EOF
window._env_ = {
  AUTHENTICATION_ENGINE: "${PLAYGROUND_AUTHENTICATION_ENGINE:=none}",
  AUTHZED_DEVELOPER_GATEWAY_ENDPOINT: "${PLAYGROUND_AUTHZED_DEVELOPER_GATEWAY_ENDPOINT}",
  AUTHZED_FRONTEND_ENDPOINT: "${PLAYGROUND_AUTHZED_FRONTEND_ENDPOINT}",
  AUTHZED_FRONTEND_API_ENDPOINT: "${PLAYGROUND_AUTHZED_FRONTEND_API_ENDPOINT}",
  GOOGLE_ANALYTICS_MEASUREMENT_ID: "${PLAYGROUND_GOOGLE_ANALYTICS_MEASUREMENT_ID}",
  OIDC_URL_PREFIX: "${PLAYGROUND_OIDC_URL_PREFIX}",
  DISCORD_CHANNEL_ID: "${PLAYGROUND_DISCORD_CHANNEL_ID}",
  DISCORD_INVITE_URL: "${PLAYGROUND_DISCORD_INVITE_URL}",
  DISCORD_SERVER_ID: "${PLAYGROUND_DISCORD_SERVER_ID}"
};
EOF
    echo "${env_file}:"
    cat "$env_file"
}

generate_nginx() {
    conf_template=$1
    nginx_conf=$2
    envsubst '$PLAYGROUND_DEVELOPER_API_DOWNLOAD_ENDPOINT,$HEADER_CONTENT_SECURITY_POLICY' < "$conf_template" > "$nginx_conf"
    echo "${nginx_conf}:"
    cat "$nginx_conf"
}
